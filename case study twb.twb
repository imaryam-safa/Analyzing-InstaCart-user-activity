<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='orders+' inline='true' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='orders' name='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm'>
            <connection class='textscan' directory='C:/Users/Safa/Desktop/data visualisation/exercise 5/instacart-market-basket-analysis/DATASOURCE' filename='orders.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='aisles.csv' table='[aisles#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='aisle_id' ordinal='0' />
            <column datatype='string' name='aisle' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='orders.csv' table='[orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' ordinal='0' />
              <column datatype='integer' name='user_id' ordinal='1' />
              <column datatype='string' name='eval_set' ordinal='2' />
              <column datatype='integer' name='order_number' ordinal='3' />
              <column datatype='integer' name='order_dow' ordinal='4' />
              <column datatype='integer' name='order_hour_of_day' ordinal='5' />
              <column datatype='real' name='days_since_prior_order' ordinal='6' />
            </columns>
          </relation>
          <relation all='true' name='order_products__prior.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' />
              <column datatype='integer' name='product_id' />
              <column datatype='integer' name='add_to_cart_order' />
              <column datatype='integer' name='reordered' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__prior.csv' table='[order_products__prior#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='order_id' ordinal='0' />
                <column datatype='integer' name='product_id' ordinal='1' />
                <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                <column datatype='integer' name='reordered' ordinal='3' />
              </columns>
            </relation>
            <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__train.csv' table='[order_products__train#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='order_id' ordinal='0' />
                <column datatype='integer' name='product_id' ordinal='1' />
                <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                <column datatype='integer' name='reordered' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='products.csv' table='[products#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='product_id' ordinal='0' />
              <column datatype='string' name='product_name' ordinal='1' />
              <column datatype='integer' name='aisle_id' ordinal='2' />
              <column datatype='integer' name='department_id' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='aisles.csv' table='[aisles#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='aisle_id' ordinal='0' />
              <column datatype='string' name='aisle' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='departments.csv' table='[departments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='department_id' ordinal='0' />
              <column datatype='string' name='department' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__train.csv1' table='[order_products__train#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' ordinal='0' />
              <column datatype='integer' name='product_id' ordinal='1' />
              <column datatype='integer' name='add_to_cart_order' ordinal='2' />
              <column datatype='integer' name='reordered' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Table Name]' value='[order_products__prior.csv+].[Table Name]' />
          <map key='[add_to_cart_order (order_products__train.csv1)]' value='[order_products__train.csv1].[add_to_cart_order]' />
          <map key='[add_to_cart_order]' value='[order_products__prior.csv+].[add_to_cart_order]' />
          <map key='[aisle]' value='[aisles.csv].[aisle]' />
          <map key='[aisle_id (aisles.csv)]' value='[aisles.csv].[aisle_id]' />
          <map key='[aisle_id]' value='[products.csv].[aisle_id]' />
          <map key='[days_since_prior_order]' value='[orders.csv].[days_since_prior_order]' />
          <map key='[department]' value='[departments.csv].[department]' />
          <map key='[department_id (departments.csv)]' value='[departments.csv].[department_id]' />
          <map key='[department_id]' value='[products.csv].[department_id]' />
          <map key='[eval_set]' value='[orders.csv].[eval_set]' />
          <map key='[order_dow]' value='[orders.csv].[order_dow]' />
          <map key='[order_hour_of_day]' value='[orders.csv].[order_hour_of_day]' />
          <map key='[order_id (order_products__prior.csv+)]' value='[order_products__prior.csv+].[order_id]' />
          <map key='[order_id (order_products__train.csv1)]' value='[order_products__train.csv1].[order_id]' />
          <map key='[order_id]' value='[orders.csv].[order_id]' />
          <map key='[order_number]' value='[orders.csv].[order_number]' />
          <map key='[product_id (order_products__train.csv1)]' value='[order_products__train.csv1].[product_id]' />
          <map key='[product_id (products.csv)]' value='[products.csv].[product_id]' />
          <map key='[product_id]' value='[order_products__prior.csv+].[product_id]' />
          <map key='[product_name]' value='[products.csv].[product_name]' />
          <map key='[reordered (order_products__train.csv1)]' value='[order_products__train.csv1].[reordered]' />
          <map key='[reordered]' value='[order_products__prior.csv+].[reordered]' />
          <map key='[user_id]' value='[orders.csv].[user_id]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[order_products__train.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[user_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>user_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_set</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eval_set]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>eval_set</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_number]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_dow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_dow]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_dow</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_hour_of_day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_hour_of_day]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_hour_of_day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_since_prior_order</remote-name>
            <remote-type>5</remote-type>
            <local-name>[days_since_prior_order]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>days_since_prior_order</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id (order_products__prior.csv+)]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>add_to_cart_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[add_to_cart_order]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>add_to_cart_order</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reordered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reordered]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>reordered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id (products.csv)]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_DF9915BD0F214CFAB874013AA4EF6C9A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_DF9915BD0F214CFAB874013AA4EF6C9A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aisle_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>aisle_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_DF9915BD0F214CFAB874013AA4EF6C9A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[department_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>department_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_DF9915BD0F214CFAB874013AA4EF6C9A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aisle_id (aisles.csv)]</local-name>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias>aisle_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aisles.csv_8DF1FE78B03647D59D5692761804E4AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aisle]</local-name>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias>aisle</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aisles.csv_8DF1FE78B03647D59D5692761804E4AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[department_id (departments.csv)]</local-name>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias>department_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[departments.csv_E26715C3A4FA42C59545A21D6F207E6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department</remote-name>
            <remote-type>129</remote-type>
            <local-name>[department]</local-name>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias>department</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[departments.csv_E26715C3A4FA42C59545A21D6F207E6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id (order_products__train.csv1)]</local-name>
            <parent-name>[order_products__train.csv1]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id (order_products__train.csv1)]</local-name>
            <parent-name>[order_products__train.csv1]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>add_to_cart_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[add_to_cart_order (order_products__train.csv1)]</local-name>
            <parent-name>[order_products__train.csv1]</parent-name>
            <remote-alias>add_to_cart_order</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reordered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reordered (order_products__train.csv1)]</local-name>
            <parent-name>[order_products__train.csv1]</parent-name>
            <remote-alias>reordered</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='INDEX &lt;=10' datatype='boolean' name='[Calculation_335236700500217858]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX() &lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of Items per Order' datatype='integer' name='[Calculation_335236700501204995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [order_id (order_products__prior.csv+)]:COUNT([product_id])}' />
      </column>
      <column caption='Hour Rank ' datatype='integer' name='[Calculation_3916442832360648705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]))'>
          <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
      </column>
      <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
          <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Rank ' datatype='integer' name='[Calculation_593630729125134336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Days Since Prior Order (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[days_since_prior_order]' peg='0' size='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Number of Items per Order (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_335236700501204995]' peg='0' size='1' />
      </column>
      <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Early Birds&quot;'>
            <value>(0,6)</value>
            <value>(0,7)</value>
            <value>(0,8)</value>
            <value>(1,6)</value>
            <value>(1,7)</value>
            <value>(1,8)</value>
            <value>(2,6)</value>
            <value>(2,7)</value>
            <value>(2,8)</value>
            <value>(3,6)</value>
            <value>(3,7)</value>
            <value>(3,8)</value>
            <value>(4,6)</value>
            <value>(4,7)</value>
            <value>(4,8)</value>
            <value>(5,6)</value>
            <value>(5,7)</value>
            <value>(5,8)</value>
            <value>(6,6)</value>
            <value>(6,7)</value>
            <value>(6,8)</value>
          </bin>
          <bin default-name='false' value='&quot;Evening Hours &quot;'>
            <value>(0,16)</value>
            <value>(0,17)</value>
            <value>(0,18)</value>
            <value>(1,16)</value>
            <value>(1,17)</value>
            <value>(1,18)</value>
            <value>(2,16)</value>
            <value>(2,17)</value>
            <value>(2,18)</value>
            <value>(3,16)</value>
            <value>(3,17)</value>
            <value>(3,18)</value>
            <value>(4,16)</value>
            <value>(4,17)</value>
            <value>(4,18)</value>
            <value>(5,16)</value>
            <value>(5,17)</value>
            <value>(5,18)</value>
            <value>(6,16)</value>
            <value>(6,17)</value>
            <value>(6,18)</value>
          </bin>
          <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
            <value>(6,13)</value>
            <value>(6,14)</value>
            <value>(6,15)</value>
          </bin>
          <bin default-name='false' value='&quot;Late Night Hours &quot;'>
            <value>(0,21)</value>
            <value>(0,22)</value>
            <value>(0,23)</value>
            <value>(1,21)</value>
            <value>(1,22)</value>
            <value>(1,23)</value>
            <value>(2,21)</value>
            <value>(2,22)</value>
            <value>(2,23)</value>
            <value>(3,21)</value>
            <value>(3,22)</value>
            <value>(3,23)</value>
            <value>(4,21)</value>
            <value>(4,22)</value>
            <value>(4,23)</value>
            <value>(5,21)</value>
            <value>(5,22)</value>
            <value>(5,23)</value>
            <value>(6,21)</value>
            <value>(6,22)</value>
            <value>(6,23)</value>
          </bin>
          <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
            <value>(2,10)</value>
            <value>(2,11)</value>
            <value>(2,15)</value>
            <value>(3,10)</value>
            <value>(3,11)</value>
            <value>(3,15)</value>
            <value>(4,10)</value>
            <value>(4,11)</value>
            <value>(4,15)</value>
            <value>(5,10)</value>
            <value>(5,11)</value>
            <value>(5,15)</value>
          </bin>
          <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
            <value>(0,13)</value>
            <value>(0,14)</value>
            <value>(0,15)</value>
            <value>(1,9)</value>
            <value>(1,10)</value>
            <value>(1,11)</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Order Dow (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[order_dow]' peg='0' size='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='aisles.csv' datatype='table' name='[__tableau_internal_object_id__].[aisles.csv_8DF1FE78B03647D59D5692761804E4AA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='departments.csv' datatype='table' name='[__tableau_internal_object_id__].[departments.csv_E26715C3A4FA42C59545A21D6F207E6A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='order_products__train.csv1' datatype='table' name='[__tableau_internal_object_id__].[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products.csv' datatype='table' name='[__tableau_internal_object_id__].[products.csv_DF9915BD0F214CFAB874013AA4EF6C9A]' role='measure' type='quantitative' />
      <column caption='Add_To_Cart_Order (Order_Products__Train.Csv1)' datatype='integer' name='[add_to_cart_order (order_products__train.csv1)]' role='measure' type='quantitative' />
      <column caption='Add To Cart Order' datatype='integer' name='[add_to_cart_order]' role='measure' type='quantitative' />
      <column caption='Aisle' datatype='string' name='[aisle]' role='dimension' type='nominal' />
      <column caption='Aisle Id (Aisles.Csv)' datatype='integer' name='[aisle_id (aisles.csv)]' role='dimension' type='ordinal' />
      <column caption='Aisle Id' datatype='integer' name='[aisle_id]' role='dimension' type='ordinal' />
      <column caption='Days Since Prior Order' datatype='real' name='[days_since_prior_order]' role='measure' type='quantitative' />
      <column caption='Department' datatype='string' name='[department]' role='dimension' type='nominal' />
      <column caption='Department Id (Departments.Csv)' datatype='integer' name='[department_id (departments.csv)]' role='dimension' type='ordinal' />
      <column caption='Department Id' datatype='integer' name='[department_id]' role='dimension' type='ordinal' />
      <column caption='Eval Set' datatype='string' name='[eval_set]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
      <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
      <column caption='Order_Id (Order_Products__Train.Csv1)' datatype='integer' name='[order_id (order_products__train.csv1)]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='integer' name='[order_id]' role='dimension' type='ordinal' />
      <column caption='Order Number' datatype='integer' name='[order_number]' role='dimension' type='ordinal' />
      <column caption='Product_Id (Order_Products__Train.Csv1)' datatype='integer' name='[product_id (order_products__train.csv1)]' role='dimension' type='ordinal' />
      <column caption='Product Id (Products.Csv)' datatype='integer' name='[product_id (products.csv)]' role='dimension' type='ordinal' />
      <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Reordered (Order_Products__Train.Csv1)' datatype='integer' name='[reordered (order_products__train.csv1)]' role='measure' type='quantitative' />
      <column caption='Reordered' datatype='integer' name='[reordered]' role='measure' type='quantitative' />
      <column caption='User Id' datatype='integer' name='[user_id]' role='dimension' type='ordinal' />
      <column-instance column='[department]' derivation='None' name='[none:department:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
      <group auto-hidden='true' hidden='true' name='[Order Dow &amp; Order Hour Of Day]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[order_dow]' />
          <groupfilter function='level-members' level='[order_hour_of_day]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:department:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;deli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;alcohol&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;snacks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;breakfast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;international&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dry goods pasta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bulk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;babies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pantry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;canned goods&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;meat seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;missing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;personal care&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;produce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dairy eggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;household&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;beverages&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:product_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;100 Calorie  Per Bag Popcorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Apple Juice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Birthday Cake Light Ice Cream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Butternut Squash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chocolate Chip Cookie Dough Ice Cream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cream Cheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dark Chocolate Pretzels with Sea Salt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Extra Ginger Brew Jamaican Style Ginger Beer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garlic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grated Parmesan Cheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honeycrisp Apples&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Large Yellow Flesh Nectarine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medium Navel Orange&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naturals Chicken Nuggets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Non-Fat Greek Yogurt With Strawberries on the Bottom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Baby Bella Mushrooms&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Blueberries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Chicken Bone Broth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Egg Whites&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Grade A Free Range Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Italian Salad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Low Sodium Chicken Cooking Stock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Orange Juice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Red Onion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Shredded Mild Cheddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Sunday Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Whipped Naturally Buttery Spread&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Yellow Squash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Yokids Lemonade/Blueberry Variety Pack Yogurt Squeezers Tubes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parsley, Italian (Flat), New England Grown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pub Mix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pure Coconut Water&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seedless Cucumbers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Strawberry Preserves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tomato Ketchup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uncured Black Forest Ham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vine Ripe Tomatoes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yellow Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0\% Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1\% Low Fat Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALMONDBREEZE UNSWEETENED&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boomchickapop Sea Salt Popcorn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Celery Sticks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diet Ginger Ale All Natural Soda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dry Roasted Almonds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresh Cauliflower&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gold Potato&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Goldfish Cheddar Baked Snack Crackers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hass Avocado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kidz All Natural Baked Chicken Nuggets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macaroni Shells &amp; White Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natural Artesian Water&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic 1\% Low Fat Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Beans &amp; Rice Cheddar Cheese Burrito&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Butterhead (Boston, Butter, Bibb) Lettuce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Crushed Fire Roasted Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Fuji Apple&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Hass Avocado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Large Grade AA Omega-3 Eggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Mixed Vegetables&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Raw Unfiltered Apple Cider Vinegar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Romaine Leaf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Spring Mix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Unsweetened Almond Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Whole Peeled Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Original Rotisserie Chicken&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peach on the Bottom Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantain Chips&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Onion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salted Butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shredded Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sparkling Water Berry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweet &amp; Salty Nut Granola Bars Peanut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweet Potatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Total 2\% Greek Strained Yogurt with Cherry 5.3 oz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanilla Almond Breeze&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whole Milk Plain Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2\% Reduced Fat Organic Milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Americone Dream® Ice Cream&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beef Franks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bunched Cilantro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cheese Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coke Zero&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corn Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crunchy Oats &apos;n Honey Granola Bars&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrolyte Enhanced Water&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fridge Pack Cola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honey Greek Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Large Burrito Flour Tortillas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marinara Pasta Sauce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozzarella String Cheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natural Free &amp; Clear Dish Liquid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Apple Juice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Bell Pepper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Cauliflower&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Garnet Sweet Potato (Yam)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Hot House Tomato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Lemonade&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Low Fat Milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Nectarine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Red Delicious Apple&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Salted Butter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Strawberry Fruit Spread&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Vanilla Extract&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Whole Wheat Fusilli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oven Roasted Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pears&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pretzel Crisps Original Deli Style Pretzel Crackers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Raspberries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sea Salt &amp; Vinegar Potato Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sliced White Mushrooms&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spinach Peas &amp; Pear Stage 2 Baby Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thin &amp; Light Tortilla Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Total 2\% with Strawberry Lowfat Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Traditional Hummus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanilla Skyr Nonfat Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Nutri Grain Bars Multi Pack&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;100\% Recycled Paper Towels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Authentic French Brioche Hamburger Buns&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blackberry Cucumber Sparkling Water&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cane Sugar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheez-It Cheddar Cracker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chopped Walnuts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crescent Rolls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fat Free Milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ginger Ale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Peas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ice Cream Sandwiches Vanilla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Light Brown Sugar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mild Salsa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milk, Reduced Fat, 2\% Milkfat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;No Salt Added Black Beans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Baby Kale Mix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Braeburn Apple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Chicken Thighs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Extra Large Grade AA Brown Eggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Greek Plain Nonfat Yogurt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Kiwi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Mango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Penne Rigate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Sliced White Mushrooms&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Tomato Cluster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Whole Cashews&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Original Almondmilk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Original Hummus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Penne Rigate \#41 Pasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purity Farms Ghee Clarified Butter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roasted Red Pepper Hummus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seven Grain Crispy Tenders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sourdough Bread&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Strawberry on the Bottom Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Super Soft Taco Flour Tortillas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tommy/Kent/Keitt/Haden Mango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uncured Slow Cooked Ham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Watermelon Chunks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YoBaby Peach Pear Yogurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;100\% Pure Pumpkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Applewood Smoked Bacon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Authentic French Brioche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Black Beans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cage Free Brown Eggs-Large, Grade A&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream Cheese Spread&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garlic &amp; Fine Herbs Gournay Cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Green Beans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honeydew Melon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lemon Hummus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Light Semisoft Cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michigan Organic Kale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Naturals Savory Turkey Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oats &amp; Honey Gluten Free Granola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Baby Broccoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Blueberry Waffles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Chicken Broth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic English Cucumber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Grade A Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Jalapeno Pepper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Low Sodium Vegetable Broth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Original Almond Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Red Potato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Shredded Mozzarella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Thompson Seedless Raisins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Whipping Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Zucchini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peach Pear Flavored Sparkling Water&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulp Free Orange Juice&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pure Irish Butter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reduced Fat Milk 100\% Lactose Free&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seedless Red Grapes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soft Pretzel Burger Buns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Strawberry Rhubarb Yoghurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tomato Paste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uncured Genoa Salami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitamin D Organic Whole Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yellow Onions&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;85\% Lean Ground Beef&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apple Cider Vinegar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apple Pie Fruit &amp; Nut Food Bar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berry Medley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bunny Pasta with Yummy Cheese Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherubs Heavenly Salad Tomatoes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corn Tortillas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emmentaler Swiss Slices&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frozen Broccoli Florets&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grape White/Green Seedless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honey Nut Cheerios&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Large Grapefruit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lemon Sparkling Water&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marinara Sauce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natural Premium Coconut Water&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic AppleApple&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Black Beans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Celery Hearts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Dijon Mustard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Fuji Apples&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Ginger Root&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Hothouse Cucumbers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Lite Coconut Milk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic No Salt Added Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Red Grapes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Sea Salt Roasted Seaweed Snacks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Strawberry Smoothie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Vegetable Broth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Yams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oven Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Presliced Everything Bagels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provolone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Seedless Grapes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sea Salt Caramel Gelato&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Small Hass Avocado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spring Water&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thin Crust Pepperoni Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Total Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanilla Skyr Style Yogurt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wild Berry Smoothie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Almond Breeze Original Almond Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bag of Organic Bananas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boneless Skinless Chicken Breasts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broccoli Florettes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cauliflower Florets&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Club Soda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dha Omega 3 Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florida Orange Juice With Calcium &amp; Vitamin D&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gluten Free Whole Grain Bread&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Half &amp; Half&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kale Greens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lowfat Vanilla Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mint Chip&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orange Sparkling Water&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Bartlett Pear&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Bunch Beets&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Frozen Mango Chunks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Green Seedless Grapes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Large Grade A Brown Eggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Milk Reduced Fat, 2\% Milkfat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Raspberries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Romaine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Simply Naked Pita Chips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Spaghetti Squash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Uncured Sliced Black Forest Ham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Whole Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Original Restaurant Style Tortilla Chips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Real Mayonnaise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Root Beer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shredded Mozzarella&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sparkling Natural Mineral Water&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweet Onions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Total 2\% All Natural Low Fat 2\% Milkfat Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unsweetened Original Almond Breeze Almond Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whole Almonds&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yotoddler Organic Pear Spinach Mango Yogurt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1\% Lowfat Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Almonds &amp; Sea Salt in Dark Chocolate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bartlett Pears&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broccoli &amp; Cheddar Bake Meal Bowl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cereal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colby Cheese Sticks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Curate Cherry Lime Sparkling Water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Distilled Water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fresh Cut Golden Sweet Whole Kernel Corn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grade A Large Eggs Cage Free Omega 3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hass Avocados&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiwi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandarin Oranges&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandarins Bag&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natural Artisan Water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic 2\% Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Beef Broth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Butternut Squash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Cucumber&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Gala Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Heavy Whipping Cream&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Large Green Asparagus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Muenster Cheese Slices&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Red Bell Pepper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Romaine Lettuce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Spring Mix Salad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Unsweetened Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Whole Strawberries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Original Semisoft Cheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peanut Butter Cereal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poblano Pepper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red Peppers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salted Tub of Butter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sinfully Sweet Campari Tomatoes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparkling Water Grapefruit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Synergy Organic Kombucha Gingerberry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Total 2\% Lowfat Greek Strained Yogurt With Blueberry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanilla Almond Breeze Almond Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whole Milk Ricotta Cheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ZBar Organic Chocolate Brownie Energy Snack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Air Chilled Organic Boneless Skinless Chicken Breasts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baby Seedless Cucumbers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Backyard Barbeque Potato Chips&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blueberry Yoghurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carrots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clementines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cucumber Kirby&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flaky Biscuits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gluten Free Dark Chocolate Chunk Chewy with a Crunch Granola Bars&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ground Turkey Breast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Half And Half Cream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian Sparkling Mineral Water&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Limes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mini Original Babybel Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange Calcium &amp; Vitamin D Pulp Free&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Bagged Carrots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Broccoli Florets&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Coconut Milk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Free Range Low Sodium Chicken Broth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Green Lentils&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Large Brown Grade AA Cage Free Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Mexican Blend Finely Shredded Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Quick Oats&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Snipped Green Beans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Turkey Bacon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Whole Kernel Sweet Corn No Salt Added&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Original Popcorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Passionfruit Sparkling Water&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pita Chips Simply Naked&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raspberry Preserves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romaine Hearts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shredded Hash Browns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sparkling Lemon Water&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweet Baguette&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweet Kale Salad Mix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Total 0\% Raspberry Yogurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unsweetened Almondmilk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White Onion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;YoKids Strawberry Banana/Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yukon Gold Potatoes 5lb Bag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;90\% Lean Ground Beef&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Apple Cinnamon GoGo Squeez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bicolor Sweet Corn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bunny-Luv Fresh Organic Carrots&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicken &amp; Maple Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crackers Cheddar Bunnies Snack Packs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curate Melon Pomelo Sparking Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;English Seedless Cucumber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frozen Organic Wild Blueberries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grapefruit Sparkling Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honey Yoghurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Large Greenhouse Tomato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mediterranean Mint Gelato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Natural Sharp Cheddar Sliced Cheese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Non Fat Acai &amp; Mixed Berries Yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Avocado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Blackberries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Cheese Frozen Pizza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Dill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Golden Delicious Apple&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Iceberg Lettuce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Long Grain White Rice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Old Fashioned Rolled Oats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Red Lentils&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Short Grain Brown Rice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Sugar Snap Peas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Wheat Square Crackers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Yellow Onion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Packaged Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pink Lady Apples&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pure &amp; Natural Sour Cream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Vine Tomato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sea Salt Pita Chips&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smartwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Squeeze Tomato Ketchup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tilapia Filet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Traditional Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trail Mix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanilla Unsweetened Almond Milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XL Emerald White Seedless Grapes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;100\% Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baby Arugula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blood Oranges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canola Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cherrios Honey Nut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cinnamon Rolls with Icing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crunchy Almond Butter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fat Free Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Globe Eggplant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green Seedless Grapes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceberg Lettuce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lightly Salted Baked Snap Pea Crisps&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milk, Organic, Vitamin D&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mixed Berries Whole Milk Icelandic Style Skyr Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Non Fat Raspberry Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Baby Rainbow Carrots&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Bread with 21 Whole Grains&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Chopped Spinach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Greek Whole Milk Blended Vanilla Bean Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Lacinato (Dinosaur) Kale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Mayonnaise&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Mini Sandwich Crackers Peanut Butter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Pinto Beans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Small Bunch Celery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Tomato Paste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Whole Crimini Mushrooms&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Original No Pulp 100\% Florida Orange Juice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pesto Tortellini  Bowls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rainbow Bell Peppers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roasted Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shallot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spaghetti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Total 0\% Greek Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unrefined Virgin Coconut Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whipped Cream Cheese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yogurt, Strained Low-Fat, Coconut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YoKids Squeeze! Organic Strawberry Flavor Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aged White Cheddar Baked Rice &amp; Corn Puffs Gluten Free Lunch Packs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baby Cucumbers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cantaloupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cherry Pomegranate Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Classic Hummus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crushed Tomatoes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Feta Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gluten Free 7 Grain Bread&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Green Tea With Ginseng and Honey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Icelandic Style Skyr Blueberry Non-fat Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lime&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Low-Fat Strawberry Banana on the Bottom Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milk, Vitamin D&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nonfat Icelandic Style Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Baby Spinach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Broccoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Cilantro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Fat Free Milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Green Cabbage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Lactose Free Whole Milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Medium Salsa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Plain Greek Whole Milk Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Riced Cauliflower&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Small Curd Cottage Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Stringles Mozzarella String Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Tomato Sauce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Whole Grain Wheat English Muffins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Original Nooks &amp; Crannies English Muffins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia Original Cream Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raisin Bran Cereal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spaghetti  No 12&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Supergreens!&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Total 0\% Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Total 0\% with Honey Nonfat Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unsalted Butter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Cheddar Popcorn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YoKids Blueberry &amp; Strawberry/Vanilla Yogurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;All Natural Marinara Sauce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baby Spinach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boneless Skinless Chicken Breast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cauliflower&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clementines, Bag&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dairy Free Unsweetened Coconut Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Extra Fancy Unsalted Mixed Nuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fat Free Skim Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flat Parsley, Bunch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gluten Free SpongeBob Spinach Littles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guacamole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jalapeno Peppers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Low Fat 1\% Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orange Juice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic  Whole Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Banana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Brown Rice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Cream Cheese Bar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Fresh Basil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Green Onions&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Large Extra Fancy Fuji Apple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Rainbow Carrots&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Roma Tomato&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Sour Cream&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Unbleached All-Purpose Flour&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Original Pure Creamy Almond Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plain Bagels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raisins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raspberry Yoghurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romaine Lettuce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shredded Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sparkling Mineral Water&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweet Onion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Total 2\% All Natural Greek Strained Yogurt with Honey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unsweetened Coconut Milk Beverage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;White Peach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whole Wheat English Muffins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almond Nut &amp; Rice Cracker Snacks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almonds&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baked Aged White Cheddar Rice and Corn Puffs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boneless Skinless Chicken Thighs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Celery Hearts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coke Classic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresh CA Grown Eggs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goat Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Half Baked® Ice Cream&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kids Organic Chocolate Chip ZBars&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiwi Sandia Sparkling Water&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monterey Jack Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oregano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Basil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Bunny Fruit Snacks Berry Patch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Cripps Pink Apples&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Frozen Peas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Half &amp; Half&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Large Grade AA Brown Eggs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Mint&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Raw Kombucha Gingerade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Romaine Hearts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Spinach Bunch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Unsalted Butter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Whole Milk Strawberry Beet Berry Yogurt Pouch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Whole Milk with DHA Omega-3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Original Rice Pilaf Mix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plain Pre-Sliced Bagels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raspberry on the Bottom Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Leaf Lettuce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russet Potato&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shredded Parmesan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sparkling Water&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweet Potato Tortilla Chips&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Total 2\% All Natural Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unsweetened Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whole Milk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zero Calorie Cola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;100\% Raw Coconut Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asparagus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Black Plum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cage Free Large White Eggs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chocolate Ice Cream&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Creamy Almond Butter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eggo Homestyle Waffles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ezekiel 4:9 Bread Organic Sprouted Whole Grain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fuji Apples&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Garlic Hummus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Green Bell Pepper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Dog Buns&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India Pale Ale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lemon Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mild Cheddar Cheese Sticks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No Pulp Calcium &amp; Vitamin D Pure Orange Juice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Baby Carrots&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Boneless Skinless Chicken Breast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Chicken Stock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Extra Firm Tofu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Granny Smith Apple&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Kale Greens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Lowfat 1\% Milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Original Hommus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Red Potatoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Sliced Crimini Mushrooms&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Spicy Taco Seasoning&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Thyme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic White Cheddar Popcorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Original Black Box Tablewater Cracker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penne Pasta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pure Sparkling Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roasted &amp; Salted Almonds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seedless Small Watermelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sonoma Traditional Flour Tortillas 10 Count&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Snap Peas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomato Sauce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Total 0\% Blueberry Acai Greek Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uncured Hickory Smoked Sunday Bacon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walnut Halves &amp; Pieces&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YoBaby Blueberry Apple Yogurt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;93\% Ground Beef&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Apple Honeycrisp Organic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bing Cherries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chicken Breast Tenders Breaded&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cran Raspberry Sparkling Water&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dark Chocolate Nuts &amp; Sea Salt Bars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European Cucumber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gala Apples&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grated Parmesan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Half And Half Ultra Pasteurized&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honey Wheat Enriched Bread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honeycrisp Apple&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Large Lemon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medium Cheddar Cheese Block&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milk Chocolate Almonds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Natural Spring Water&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Baby Arugula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Blue Corn Tortilla Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Chicken &amp; Apple Sausage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Distilled White Vinegar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Good Seed Bread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Italian Parsley Bunch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Low Sodium Chicken Broth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Orange Bell Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Red On the Vine Tomato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Shredded Carrots&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Summer Strawberry Bunny Fruit Snacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Wheat-Free &amp; Gluten-Free Original Crackers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Yellow Peaches&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panko Bread Crumbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plain Mini Bagels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pure Baking Soda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sea Salt Potato Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smoked Turkey Breast Slices&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Strawberries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Toasted Coconut Almondmilk Blend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trilogy Kombucha Drink&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Veggie Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vitamin D Whole Milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yellow Bell Pepper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2\% Reduced Fat DHA Omega-3 Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpine Spring Water&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ancient Grain Original Granola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broccoli Crown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheddar Bunnies Snack Crackers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cold Brew Coffee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dressing, Jersey Sweet Onion, Calorie Free&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresh Ginger Root&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Golden Sweet Potato&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grade A Large White Eggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Heavy Whipping Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Large Alfresco Eggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mango Chunks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mixed Fruit Fruit Snacks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natural Chicken &amp; Sage Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic 21 Grain Thin Sliced Bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Beef Hot Dogs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Cannellini Beans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic D&apos;Anjou Pears&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Garbanzo Beans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Homestyle Waffles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Leek&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Multigrain Waffles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Red Cabbage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Rosemary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Sticks Low Moisture Part Skim Mozzarella String Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Whole String Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Original Veggie Straws&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peanut Butter Chocolate Chip Fruit &amp; Nut Food Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potato Yukon Gold Organic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Plums&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skim Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Special Reserve Extra Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taco Seasoning&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Total 2\% Lowfat Greek Strained Yogurt with Peach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanilla Ice Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whole Organic Omega 3 Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zen Tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Air Chilled Breaded Chicken Breast Nuggets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baby Food Stage 2 Blueberry Pear &amp; Purple Carrot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blueberries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caramel Cookie Crunch Gelato&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Classic White Bread&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cucumber &amp; Garlic  Tzatziki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Everything Bagels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fat Free Blueberry Yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Firm Tofu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gluten Free Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grilled Chicken Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lime Sparkling Water&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mini Cucumbers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orange Bell Pepper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Baby Spinach Salad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Broccoli Crowns&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Cinnamon Crunch Cereal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Free Range Chicken Broth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Green Leaf Lettuce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Medjool Dates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Plain Whole Milk Yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Roasted Sliced Chicken Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Smoked Turkey Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Tortilla Chips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Whole Grassmilk Milk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Original Beef Jerky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Original Orange Juice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pineapple Chunks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raspberries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roma Tomato&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shells &amp; Real Aged Cheddar Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spaghetti Pasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sustainably Soft Bath Tissue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Total 0\% Nonfat Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unsalted Pure Irish Butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;White Corn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whole Grain Cheddar Baked Snack Crackers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YoKids Squeezers Organic Low-Fat Yogurt, Strawberry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;100\% Recycled Bathroom Tissue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asparation/Broccolini/Baby Broccoli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blackberries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blueberry on the Bottom Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;California Sourdough Bread&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chopped Spinach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fancy Eggplant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garlic Powder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Green Onions&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Heart Baby Kale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Icelandic Style Fat Free Plain Yogurt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lemonade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mild Diced Green Chiles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;No Pulp Calcium &amp; Vitamin D Pure Premium 100\% Pure Orange Juice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Baby Kale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Bosc Pear&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Chicken Strips&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Extra Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Ketchup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Macaroni Shells &amp; Real Aged Cheddar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Peeled Whole Baby Carrots&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Red Radish, Bunch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Sliced Peaches&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Tomato Basil Pasta Sauce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic White Onions&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic YoKids Very Berry Smoothies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Original Hot Sauce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Penne Rigate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Purified Water&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roasted Pine Nut Hummus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serrano Chile Peppers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sour Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Super Greens Salad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tomatoes, Whole Peeled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uncured Pepperoni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yobaby Organic Plain Yogurt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yogurt, Lowfat, Strawberry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2\% Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aluminum Foil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Basil Pesto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brussels Sprouts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheerios Cereal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coconut Water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Collard Greens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dried Mango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Vanilla Creamer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresh Mozzarella Ball&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granny Smith Apples&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hint Of Sea Salt Almond Nut Thins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margherita Pizza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natural Classic Pork Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic American Cheese Singles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Beef Uncured Hot Dogs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Carrot Bunch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Dark Chocolate Peanut Butter Cups&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Garlic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Honey Sweet Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Lemon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Navel Orange&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Red Chard Greens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Russet Potato&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Strawberries&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Vanilla Bean Ice Cream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Original Whipped Cream Cheese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pink Lady (Cripps) Apple&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Popcorn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Premium Pure Cane Granulated Sugar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red Potatoes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scoops! Tortilla Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sliced Black Olives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thick &amp; Crispy Tortilla Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Total 2\% Lowfat Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanilla Pure Almond Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whole Strawberries&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Order Dow &amp; Order Hour Of Day (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Weekend Busiest Hours&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Early Birds&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Monday-Thursday Rush Hours &quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Friday Rush Hours &quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Late Night Hours &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Evening Hours &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='order_id (order_products__train.csv1)' />
        <field-sort-custom-order field='product_id (order_products__train.csv1)' />
        <field-sort-custom-order field='add_to_cart_order (order_products__train.csv1)' />
        <field-sort-custom-order field='reordered (order_products__train.csv1)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='aisles.csv' id='aisles.csv_8DF1FE78B03647D59D5692761804E4AA'>
            <properties context=''>
              <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='aisles.csv' table='[aisles#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='aisle_id' ordinal='0' />
                  <column datatype='string' name='aisle' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='departments.csv' id='departments.csv_E26715C3A4FA42C59545A21D6F207E6A'>
            <properties context=''>
              <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='departments.csv' table='[departments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='department_id' ordinal='0' />
                  <column datatype='string' name='department' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='order_products.csv' id='order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA'>
            <properties context=''>
              <relation all='true' name='order_products__prior.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' />
                  <column datatype='integer' name='product_id' />
                  <column datatype='integer' name='add_to_cart_order' />
                  <column datatype='integer' name='reordered' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__prior.csv' table='[order_products__prior#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='order_id' ordinal='0' />
                    <column datatype='integer' name='product_id' ordinal='1' />
                    <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                    <column datatype='integer' name='reordered' ordinal='3' />
                  </columns>
                </relation>
                <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__train.csv' table='[order_products__train#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='order_id' ordinal='0' />
                    <column datatype='integer' name='product_id' ordinal='1' />
                    <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                    <column datatype='integer' name='reordered' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='order_products__train.csv1' id='order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251'>
            <properties context=''>
              <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='order_products__train.csv1' table='[order_products__train#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' ordinal='0' />
                  <column datatype='integer' name='product_id' ordinal='1' />
                  <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                  <column datatype='integer' name='reordered' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='orders.csv' id='orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA'>
            <properties context=''>
              <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='orders.csv' table='[orders#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' ordinal='0' />
                  <column datatype='integer' name='user_id' ordinal='1' />
                  <column datatype='string' name='eval_set' ordinal='2' />
                  <column datatype='integer' name='order_number' ordinal='3' />
                  <column datatype='integer' name='order_dow' ordinal='4' />
                  <column datatype='integer' name='order_hour_of_day' ordinal='5' />
                  <column datatype='real' name='days_since_prior_order' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='products.csv' id='products.csv_DF9915BD0F214CFAB874013AA4EF6C9A'>
            <properties context=''>
              <relation connection='textscan.0yaqtzk0lhtp9g17yhh8c1emx3vm' name='products.csv' table='[products#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='product_id' ordinal='0' />
                  <column datatype='string' name='product_name' ordinal='1' />
                  <column datatype='integer' name='aisle_id' ordinal='2' />
                  <column datatype='integer' name='department_id' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[aisle_id]' />
              <expression op='[aisle_id (aisles.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_DF9915BD0F214CFAB874013AA4EF6C9A' />
            <second-end-point object-id='aisles.csv_8DF1FE78B03647D59D5692761804E4AA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[department_id]' />
              <expression op='[department_id (departments.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_DF9915BD0F214CFAB874013AA4EF6C9A' />
            <second-end-point object-id='departments.csv_E26715C3A4FA42C59545A21D6F207E6A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (order_products__prior.csv+)]' />
            </expression>
            <first-end-point object-id='orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA' />
            <second-end-point object-id='order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (order_products__train.csv1)]' />
            </expression>
            <first-end-point object-id='orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA' />
            <second-end-point object-id='order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_id]' />
              <expression op='[product_id (products.csv)]' />
            </expression>
            <first-end-point object-id='order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA' />
            <second-end-point object-id='products.csv_DF9915BD0F214CFAB874013AA4EF6C9A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Maryam - Best Selling Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Best Selling Products</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products__train.csv1' datatype='table' name='[__tableau_internal_object_id__].[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251]' role='measure' type='quantitative' />
            <column-instance column='[order_number]' derivation='None' name='[none:order_number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Number' datatype='integer' name='[order_number]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_number:ok]' context='true'>
            <groupfilter function='member' level='[none:order_number:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[order_products__train.csv_CEC6435AEBA84F50BD10B1A319DC3251])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;.5\\\&quot; Waterproof Tape&quot;' function='range' level='[none:product_name:nk]' to='&quot;ZZZQuil Vanilla Cherry Nighttime Liquid Sleep Aid&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_number:ok]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</cols>
      </table>
      <simple-id uuid='{49F8538A-7E86-4B50-88E0-765552503396}' />
    </worksheet>
    <worksheet name='Maryam - Busiest Days of the Week '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Busiest Days of the Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column aggregation='None' datatype='integer' name='[Order Dow (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[order_dow]' peg='0' size='1' />
            </column>
            <column-instance column='[order_dow]' derivation='Count' name='[cnt:order_dow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Dow (bin)]' derivation='None' name='[none:Order Dow (bin):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:order_dow:qk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:Order Dow (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4D02C788-B57B-44CC-A7D8-DFCCED85837C}' />
    </worksheet>
    <worksheet name='Maryam - Busiest Hours '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Busiest Hours </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{76665BFF-111F-41FF-B8DF-42F928C9BBC6}' />
    </worksheet>
    <worksheet name='Maryam - Busiest Hours - Groups '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>busiest hours - groups</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{BA019C5D-AD10-43CA-89DE-699B10CF1585}' />
    </worksheet>
    <worksheet name='Maryam - Busiest Hours - Rank'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>busiest hours- rank</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Hour Rank ' datatype='integer' name='[Calculation_3916442832360648705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]))'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3916442832360648705]' derivation='User' name='[usr:Calculation_3916442832360648705:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832360648705:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832360648705:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{92168723-33FB-41CB-92B3-E1D05E1676C0}' />
    </worksheet>
    <worksheet name='Maryam - Days Since Prior Order'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column aggregation='None' datatype='integer' name='[Days Since Prior Order (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[days_since_prior_order]' peg='0' size='1' />
            </column>
            <column-instance column='[days_since_prior_order]' derivation='Count' name='[cnt:days_since_prior_order:qk]' pivot='key' type='quantitative' />
            <column caption='Days Since Prior Order' datatype='real' name='[days_since_prior_order]' role='measure' type='quantitative' />
            <column-instance column='[Days Since Prior Order (bin)]' derivation='None' name='[none:Days Since Prior Order (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:days_since_prior_order:qk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:Days Since Prior Order (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Days Since Prior Order (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{FA4CA8D1-032D-40D0-B83F-C9F006CCE2F1}' />
    </worksheet>
    <worksheet name='Maryam - Number of Items Purchased per Order'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Number of Items purchased per order</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Number of Items per Order' datatype='integer' name='[Calculation_335236700501204995]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [order_id (order_products__prior.csv+)]:COUNT([product_id])}' />
            </column>
            <column aggregation='None' datatype='integer' name='[Number of Items per Order (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_335236700501204995]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_335236700501204995]' derivation='Count' name='[cnt:Calculation_335236700501204995:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Items per Order (bin)]' derivation='None' name='[none:Number of Items per Order (bin):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:Calculation_335236700501204995:qk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:Number of Items per Order (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Number of Items per Order (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{6967096B-5B9E-4F68-B184-2B928B1AF040}' />
    </worksheet>
    <worksheet name='Maryam - Number of Products Sold per Department '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>number of products sold per department</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column caption='Department' datatype='string' name='[department]' role='dimension' type='nominal' />
            <column-instance column='[department]' derivation='None' name='[none:department:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:department:nk]' />
              <size column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:department:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{17A6F6D9-1FF2-4016-972B-50A51AED0179}' />
    </worksheet>
    <worksheet name='Maryam - Top 10 Products in the Busiest Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Top 10 Products in the Busiest Hours</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA]' role='measure' type='quantitative' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='8' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='9' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='10' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='11' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='12' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='13' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='14' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='15' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='16' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='17' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='18' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</cols>
      </table>
      <simple-id uuid='{23FF24C1-B1AB-4CDC-8719-77EA9B5F6571}' />
    </worksheet>
    <worksheet name='Maryam - Top 10 Reordered Products '>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='INDEX &lt;=10' datatype='boolean' name='[Calculation_335236700500217858]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX() &lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[reordered]' derivation='Avg' name='[avg:reordered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Reordered' datatype='integer' name='[reordered]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_335236700500217858]' derivation='User' name='[usr:Calculation_335236700500217858:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>40</min>
            <max>491291</max>
          </filter>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_335236700500217858:nk]'>
            <groupfilter function='member' level='[usr:Calculation_335236700500217858:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[avg:reordered:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_335236700500217858:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</rows>
        <cols>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[avg:reordered:qk]</cols>
      </table>
      <simple-id uuid='{2A591942-203B-410B-B114-4615947641EA}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Early Birds'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Early Birds&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{9F07B148-ED9E-4679-96D2-366AAC4570DF}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Evening Hours '>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Evening Hours &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{5C26AB40-BD04-4E9E-B181-7B27FB6FC2D7}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Friday Rush Hours '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>top products per group - friday rush hour </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Friday Rush Hours &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{A962DD19-CA3C-440C-A62B-29ECC0742DFD}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Late Night Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Late Night Hours &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{61F46879-CDAB-4528-95A1-1395BC11ABD6}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Monday-Thursday Rush Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Monday-Thursday Rush Hours &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{8F0FA5D4-7F3B-4829-A854-06CC9715A801}' />
    </worksheet>
    <worksheet name='Maryam - Top Products per Group - Weekend Busiest Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Percentage of Total Orders ' datatype='real' name='[Calculation_3916442832509878277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([order_id (order_products__prior.csv+)])/sum({fixed[product_name]: count([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders ' datatype='integer' name='[Calculation_3916442832510386182]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_3916442832509878277])'>
                <table-calc ordering-field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours &quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours &quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours &quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours &quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3916442832509878277]' derivation='User' name='[usr:Calculation_3916442832509878277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3916442832510386182]' derivation='User' name='[usr:Calculation_3916442832510386182:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[order_hour_of_day]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Weekend Busiest Hours&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832510386182:qk:2]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_3916442832509878277:qk]</rows>
        <cols>([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok] / ([federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok] / [federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{B55A3A40-4ED1-4E60-8F0D-0C883126D4F0}' />
    </worksheet>
    <worksheet name='Maryam - Treemap of Aisles and Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>treemap of aisles and products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1vs7bkh0lkmsxs19ssvhy0y936sp' />
          </datasources>
          <datasource-dependencies datasource='federated.1vs7bkh0lkmsxs19ssvhy0y936sp'>
            <column caption='Rank ' datatype='integer' name='[Calculation_593630729125134336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA]' role='measure' type='quantitative' />
            <column caption='Aisle' datatype='string' name='[aisle]' role='dimension' type='nominal' />
            <column-instance column='[aisle]' derivation='None' name='[none:aisle:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_593630729125134336]' derivation='User' name='[usr:Calculation_593630729125134336:qk:4]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' ordering-type='Field'>
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[aisle]' />
                <order field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:aisle:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:aisle:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_593630729125134336:qk:4]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:aisle:nk]</column>
            <column>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_593630729125134336:qk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_490E4186804941E4BFF8CE933419A3FA:qk]' />
              <color column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:aisle:nk]' />
              <text column='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EAEDD7C1-3A92-452C-A1FC-03752B273941}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Maryam - Your Order Hasn&apos;t Delivered Yet?' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Your Order Hasn&apos;t Delivered Yet? </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='524' />
          <format attr='background-color' value='#69aaa5' />
          <format attr='font-size' value='11' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4564' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='184' h='19087' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5394' />
            <zone h='74689' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='24481'>
              <flipboard active-id='14' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Instacart&apos;s week looks packed, doesn&apos;t it?' captured-sheet='Maryam - Busiest Days of the Week ' id='1'>
                    <capturedDeltas>
                      <worksheet name='Maryam - Busiest Days of the Week '>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:order_dow:qk]' scope='rows' value='Order number ' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:order_dow:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='If that wasn&apos;t enough, let&apos;s look at Instacart&apos;s daily, hour-by-hour order breakdown. The business is thriving!' captured-sheet='Maryam - Busiest Hours ' id='2' />
                  <story-point caption='Still closer--this is what people are ordering most during busiest days -- the weekends! ' captured-sheet='Maryam - Top Products per Group - Weekend Busiest Hours' id='3' />
                  <story-point caption='Now is a good time to ask: why are we here? &#10;Good question. Well, Instacart is content with thriving, but customers are discontent since orders just take too long. How can we convert user data to useful business insights?' captured-sheet='Maryam - Best Selling Products' id='4' />
                  <story-point caption='The proposed solution? Understanding user behavior to enhance delivery agents&apos; workflow. ' captured-sheet='Maryam - Number of Products Sold per Department ' id='6' />
                  <story-point caption='Let&apos;s look at the most popular items on a friday night for instance: ' captured-sheet='Maryam - Top Products per Group - Friday Rush Hours ' id='7' />
                  <story-point caption='We also know organic food is popular with our audience. What does this mean? &#10;&#10;' captured-sheet='Maryam - Top Products per Group - Late Night Hours' id='8' />
                  <story-point caption='That there are patterns involved, people are consistent.  What can we do with this information? &#10;We can predict customer needs and identify key products for the day. This will help agents be more focused. ' captured-sheet='Maryam - Top 10 Products in the Busiest Hours' id='9' />
                  <story-point caption='How about focusing on order size? ' captured-sheet='Maryam - Number of Items Purchased per Order' id='10' />
                  <story-point caption='Here&apos;s when Instacart is the busiest. In general, each day has a high traffic period of 8 hours. How do we maximise productivity of the delivery agents, knowing this information? ' captured-sheet='Maryam - Busiest Hours - Rank' id='11' />
                  <story-point caption='Another way would be assigning orders with similar items in the same area to the same delivery agent so it takes little time to fulfil orders. ' captured-sheet='Maryam - Treemap of Aisles and Products' id='12' />
                  <story-point caption='Finally, ask customers if they want their orders scheduled. Doing so could help readying the order in advance, only to be delivered later in the day. ' captured-sheet='Maryam - Busiest Hours - Groups ' id='13'>
                    <capturedDeltas>
                      <worksheet name='Maryam - Busiest Hours - Groups '>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[__tableau_internal_object_id__].[cnt:orders.csv_BB6B240AAE8C4B26B2AB707B1B3F95EA:qk]' scope='rows' value='order number ' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Our goal? Ultimately, satisfying the 500,000 odd customers every week. And doing it consistently so people choose Instacart over and over again. ' captured-sheet='Maryam - Busiest Days of the Week ' id='14'>
                    <capturedDeltas>
                      <worksheet name='Maryam - Busiest Days of the Week '>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:order_dow:qk]' scope='rows' value='Number of Orders' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[cnt:order_dow:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='13693' hidden='true' id='6' story-point-id='6' type-v2='text' w='36516' x='2362' y='24170'>
          <formatted-text>
            <run>Instacart-users determine that these are the most popular departments. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='20436' hidden='true' id='7' story-point-id='4' type-v2='text' w='38878' x='53642' y='41701'>
          <formatted-text>
            <run>This are the top-selling products every day. Everybody on Instacart has favorites!</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='32365' hidden='true' id='8' story-point-id='9' type-v2='text' w='36024' x='55413' y='34751'>
          <formatted-text>
            <run>For example, agents should know the top 10 products for each day, and have a general idea of ideal locations. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='32365' hidden='true' id='9' story-point-id='10' type-v2='text' w='38484' x='50000' y='31846'>
          <formatted-text>
            <run>Limiting order size to 5-6 items could speed up the delivery process. Additionally, have discounts in place during the daily 3-5 busiest hours to encourage restricted buying. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='37552' hidden='true' id='10' story-point-id='11' type-v2='text' w='21161' x='49311' y='31120'>
          <formatted-text>
            <run fontsize='12'>One way would be to contract more delivery agents during these 8 hours so many customers can be serviced at the same time, thereby reducing waiting times. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='20954' hidden='true' id='11' story-point-id='7' type-v2='text' w='17126' x='16732' y='58195'>
          <formatted-text>
            <run>Beef broth and gelato? &#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='27801' hidden='true' id='12' story-point-id='7' type-v2='text' w='17717' x='45965' y='48963'>
          <formatted-text>
            <run>What can we do with this information?</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='50311' hidden='true' id='13' story-point-id='7' type-v2='text' w='17421' x='74606' y='42946'>
          <formatted-text>
            <run fontsize='12'>A continuously updated &apos;popular today&apos; infographic, available to both customers and agents: to help hyperfocus orders. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='34544' hidden='true' id='14' story-point-id='13' type-v2='text' w='20965' x='48524' y='33091'>
          <formatted-text>
            <run fontsize='12'>Move away from delivering during rush hours. Encourage customers to have their orders delivered during Early Bird or Late Night hours. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3112' hidden='true' id='15' story-point-id='1' type-v2='text' w='21654' x='11220' y='79668'>
          <formatted-text>
            <run fontalignment='0'>Data Source: Instacart</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{2C14A726-D553-4F4A-9260-63F1A8D8FAA2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Maryam - Busiest Days of the Week '>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{267AB8F3-3521-4FF2-94B4-09B67D280081}' />
    </window>
    <window class='worksheet' name='Maryam - Busiest Hours '>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF1C1A8A-3E04-407E-A5F1-EA7B1466B758}' />
    </window>
    <window class='worksheet' name='Maryam - Top 10 Products in the Busiest Hours'>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{981C7137-DCE3-4977-B5B4-032DB93C6282}' />
    </window>
    <window class='worksheet' name='Maryam - Days Since Prior Order'>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2615F13A-2B41-4348-900A-D24361E0F8AB}' />
    </window>
    <window class='worksheet' name='Maryam - Best Selling Products'>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_number:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B60C923-4E64-4CBC-A2F0-128F4DE14824}' />
    </window>
    <window class='worksheet' name='Maryam - Top 10 Reordered Products '>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[usr:Calculation_335236700500217858:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C8B2F4D-84E6-4D7B-984B-9C047C0EE908}' />
    </window>
    <window class='worksheet' name='Maryam - Number of Items Purchased per Order'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F33903F0-81FA-4081-827F-C19CD8A942AB}' />
    </window>
    <window class='worksheet' name='Maryam - Treemap of Aisles and Products'>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:aisle:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:aisle:nk]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5D72A6B-2380-4EFD-83C3-F42AAFD0D88B}' />
    </window>
    <window class='worksheet' name='Maryam - Number of Products Sold per Department '>
      <cards>
        <edge name='top'>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:department:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0F48D1E-9D5B-4D1E-AF05-458C695CB86A}' />
    </window>
    <window class='worksheet' name='Maryam - Busiest Hours - Rank'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{353D4EAD-B5E4-428B-AE62-39D3F3A8C5E3}' />
    </window>
    <window class='worksheet' name='Maryam - Busiest Hours - Groups '>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBCBEB62-1F7C-42D0-B427-CD472C5FFF7A}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Friday Rush Hours '>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3296317F-434D-4A14-9481-ECFDD25CAB88}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Early Birds'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26EE49C3-A944-4AC0-819F-3AFFC918F190}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Evening Hours '>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8424B5E1-1B77-4ACE-82C5-C9A668CEDF75}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Late Night Hours'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C77566ED-6BDF-4D5E-9693-6349F13D7338}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Monday-Thursday Rush Hours'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEDF08AF-06E2-4434-9AD0-74319DA5FCB7}' />
    </window>
    <window class='worksheet' name='Maryam - Top Products per Group - Weekend Busiest Hours'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_dow:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:order_hour_of_day:ok]</field>
            <field>[federated.1vs7bkh0lkmsxs19ssvhy0y936sp].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1937C09B-A303-404D-B857-AA45AA2F5F76}' />
    </window>
    <window class='dashboard' maximized='true' name='Maryam - Your Order Hasn&apos;t Delivered Yet?'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A3F89FE8-C8B5-4250-B81C-F056D5EA44E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Maryam - Best Selling Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Busiest Days of the Week ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAZ9klEQVR4nO3deVgc953n8XdVXzTNfd+nQEggJAwSh6T4trN24mQcO8c48eTJZBLnySZ2
      NjPrncnuzO4+mV1PNs5kHc8oY0/sie3EyfjJxk4ex/EhWzJCCNCBDhAgJHEjxC3ou7tq/0AX
      AgEWjZC6v6/n0eOn2t2/ri7q01XVVd/6Krqu6wgRghRFUdTVngkhVpMEQIQ0CUAI8nuc9PSf
      WdJzdZ+Trt6hFZ6j1SMBuE5G+zt5+YXn+X9v7cbp9c//nK6DPP+Ltxcda6ynhR07dvD8Cy/T
      0TvMRz2Ia3j3t3SNe3jthecYnHZffHznr17iWP/47CerJureeo3ecedHfJebgwTgOtCcw/zw
      6R2kFGzA272PF9/Yg2O0j7bTfTTsrcPh9tFc/wEf7GlifNqJrvlo2PU2dYfa0HSd1qOHGehq
      5/CJPgAm+tsZ8sdQWpDKP//gf3F6xM7gqRZ+/4d3GJlyMXjqGL2jTiYGOtl/vBu/c4KDLScA
      0N2j1B0/R9X6DOxT52hrruf9ukP4dZ2cDRtJjQ7jSPMROo408u6uRnyKgTu2buDd3QdWcxGu
      GONqz0AoGD7dQmLJ7dy9vQqqcvnrv/0FY2ucPLXjbe75xCfwv/sL3jxmpyTRg1+DPb/5KXtH
      YzEM7sRjeoKW13/OiCGTP/nc5y6OmZKVT+X2LRgmu2g8epKRE42kxZh56v/8lG8+kM/bh6cp
      cDby7kAMyXen0Xw6nFuKCxjv6SAquwizCngm6OgeZqr9Dc6pUTj3v826T6fy7q9eIKa4mjMt
      9USk51O9Zh1Df/wdsG3VluFKkS3AdWA0mnB73OiA3+MGoxEF2HTbA3zhE3fQ29vD57/8Ve66
      tQqLQeNYSw+pyZGkpacyOjoG5mj+/LHH2JifNmdsh8OFUfFTccs6Hnz4ETL0IcIKbmG4/RDd
      zgiKYjwcaj1FcWkhAG63E5PZMvNiSyz3P/BJvvSZe+np6780aEwmX/r8Q1QV5+NwucFsxu9y
      z3nvYCABuA7icjfgO1XL8z//JT/6h59Q8rHtGICIyEgURSEzJYlf//x5fvPGH3H4VYrX59Db
      N4whIp7UWBsGcxjhFtOsMY8fqOVXr/yM3zQMsb2skMamo7zy0r8yYEwnITqNaMcRJo1plGdZ
      +UPzMAUpsQDExCcxOTZz3KD4pnnrjd+y45U3KVlXcNX5906MY4mLW8EltHoUORF2fXgckzQ2
      7seWlMvGdbm4J84w4LCQnx6H5vdwaN9eLPGpGI02ivJTaG7Yy7jXTMXmCs50d5CVX4TFOPN9
      NT3SS92BVoyWCCoqtxBtNTHce4IjnWcor6wkJtxM1/FD+KNzyI700dQxzJby9RgAdA/P/fhZ
      Hnzs2/hGejjd1UNYYg5lRTl0dxwnKiOXM11dFBatZbj7BEpsJv1Nv+NsTAUf35y/qssw0BRF
      UW64AGiahqrKhmklDfe0c86UTH5qzJKe37y/kbWbKrAag+vvckMGwOfzYTTKsblYeXIphAh5
      EgAR0iQAIqRJAERIkwCIkCYBECFNAiBCmgRAhLQABUDHNTVKU8M+OrrPoOs6o4NdNDTuZ3za
      BcD4UA8NDU2MTrnQ8TI4MALAxNAA4/bgvNBK3PgCEgDN46Dh4HFKy7eQGmdDc49z8PgZNm0o
      pKmxCc09RuOxfjZtWsehxgY0zUNP9yCaZ4oDLaeICDMHYjaE+MgCcs3B9PggTrefg037iIzP
      IDt8guisAizWKGIVP0PD/cRnr8FisREVpuL0a9gnR6nbc5ayqlsxGRQ0TQNmrgXy+2cqpl7d
      2YLD7b3m+Yq2WXjo1nWB+IgiSAUkALqmERGXSuUt+Ryu/4CRhARmLj2coczzGkVVUfDi82tX
      Hffd/aeYOL8LdS3S4iMlAGJBAQlARGwKrtZmfFoubi9EpWRxcn87rvT1TComKpIyOVLbijvD
      yrQHrAaV8MhYNpfn8f6HdWy99WNYTTOJUVUVg8GwyDsukULgxhJBKSDHAIawSGoqiji0/wCZ
      JVuIi4qlvCSdw8c6qdhcgWKOobI0i+YjbZRt3oKqmsnJTUM126gqX8+0Qw6CxeoI0HXHCuHR
      SVRWJV18JDY5i8rkrIvT0YkZVCZmXJxOTokHICI2mYjAzIQQH5mcBxAhLSQrT178wyH+sK9z
      WWP84Bt3k7vEiipx4wrJAPg0HY9v/ptTLdUNVkgnrpHsAomQJgEQIU0CIEKaBECENAmACGkS
      ABHSJAAipEkAREiTAIiQJgEQIS1Al0LoDPV1M2F3YwyLJDcrlbN9XUw6PBitUeRnpeKaHqd3
      cIz07BzCzXBu0klUdATOqUk0czi2K+5/L8T1EJAtgO530dbZT0JCAvExUaD5aTvZdX46Et1n
      p66+mYgIE/X1TWi6i+Otp9H9Hpr2HwS5R69YJQHZAvjdLoZHBzhxMoy160vQNTvDfUN02rpZ
      u74Yx9mTRGSvJzU1iZ6TXbh8Grqu097cRPaGLdjMhlkXlwXyQrN5xwrQ8HJB3M0vIAEwhsfy
      0Gcexudx8OEHu9hy5708/MXP43NPs3Pnh5SXJGM0GgAFFQUfOqMDpxm2mLm9xArMFMPruo7f
      779sxVrmCqbr+Hy+OQ9fKMBfDp/fN+/Y4uYSkAB43dNMu1ViIszYLEY89inGDUairRbCzAZs
      CclMHurHnxWJw6cTbjCQkJ5HWUkKtfua+Ni2LZguq9291CBjvnL6j0BRMJnmHluohuXvchkN
      xnnHFjeXgARAURT6Tx3nuNNDYl4J0WEqLa0ttLm8ZBSVYA1PoiB5mH2NB8gp2oBBNZKYFIc5
      MpGS3AlGJh2kxtkCMStCfCSB2QUy2yjZVD7rsdKyilnTmWtKyFxzaTovPx2A5KyrdycUYqXJ
      zy8ipEkAREiTAIiQJgEQIU0CIEKaBECENAmACGkSABHSJAAipEkAREiTAIiQJgEQIU0CIEJa
      wPoEu11O7HY7DqcbHfD7vDgcDvzaTFHL7OlLhSp+nw9/AApUhLgWgQmA5qH2/V10dnbS3XcG
      TXNTt+sDWluPUH+gFXQPe3d9QGvrMeoaj6LpDg40HQd09tftZtIplVVidQQkAH63E6/JTGxc
      PDnZ6XhHujCmllBRXokyPczk2dMY0oqpKN+MyTeO53xr1L62A0TkbCTWJo2yxeoITEWYOYLy
      kiJcHjf1tXVsyIvGZE0CRcGqw6TLhSUsYaZEERW3pjPSf5K+sxY++YlyFLhYCxzommCvd26j
      bW2B3sRL5fP55h1b3FwCc18gXSMuKQ2jQWGsrwstIg5X9yjkRjOtKBTHxnL6xDjosbg0DatB
      JSE9n+I8G/UHjrN98/pZ/Xxvippgo9QEB4OABMDnsXPgYAuaomOJyiIpIYOzXfV8WNtPQnYh
      lsgUEqjnwz0DxKbmY1IN2GxWIpJzyRw5yMDoNBkJ0ixVXH8BCYA5PJbqbdtmPbZh89ZZ08Xl
      NbOmS0pnCoTzimfXEgtxPcl5ABHSJAAipEkAREiTAIiQJgEQIU0CIEKaBECENAmACGkSABHS
      AtQjTAD0DE3y3O8PLGuMj23M5p7N+QGaI7EYCUAA2V0ejp46u6wxCjPjAzQ3YilkF0iENAmA
      CGkSABHSAnYMoOs6LXVvMRRWyB235LLr3bewRMZhiU6kfH0eB+trmfYrhMdkUF6SSvPBHsrK
      13KsaR/JRbeQGGkJ1KyIG8Ck3Y3DtbyKuYRoKyajYfEnLkPAAjB99iRuSwIKGrrmwRyZRGVl
      Baqq4B3vwm7N5mObstlTW4tXS8bj8TLR1860NYViWfmDzqvvHeWths5ljfHMtz9OdkpMgOZo
      fgEJgOZz0tw5ytbSDHa120FVCDfoNDbsxalbKcswYIvOBEXFqio4/Boj/SfpGQrjwU/dGzQ1
      wT6ff9njapoWFLXGAenFPM8ynnZ66OwfW9a4ybERpMbPVCAGJAAjPR0Mj0+wr2mU02d8bChI
      Z+OWSlRFp+H9XRCRhXPADnocbl3HqqokpOWTm6Jz8HgfFesyg6Im2BiAzbWqqkFRa6yqK7OM
      B/rG+f7Ldcsa97O3r+eRu0tn3mNZI52XlLeRB/M2wtQA7g470Yqduj2HUBUdny2OmLhsDEd3
      8eGe05gjUjAbFBRVISmvhMH63fSNxpIpNcFiFQT2RFhkGrefL/Hdvj1p1v+quu2uWdNbqkoA
      2Fh9W0BnQYiPQn4GFSFNLoW4SXxwqAuX59pvIVmQEcea9LgAzlFwkADcJF5++zCj55zX/Pov
      3FkiAZiH7AKJkCYBECFNAiBCmhwDhLhv/OhNphzua359RmIUT339rsWfeIOSAIS4KYebKYfn
      ml8/7bz2194IZBdIhDQJgAhpEgAR0iQAIqRJAERIkwCIkBa4AOg6p4/spaG1F13XaD/cRG1t
      LSd6hwE4cXQ/e/bU0tZ1Bh0X7W1dAHS3H2Nk+tp/hxZiOQIWAPfUGYYm3EzbnfimBhh0RbB1
      azV9J1rxTPXR57BRU1PN2a42fH4fE+NTOMf66JrQiZM+wWKVBOREmK55aT56mk2lhezttOOa
      GMGWkI2qGolCZ2h8lKjEDFTVSLjRgFObqQl+Z8TKvf/hHlRFkZrg81aqJnilxtWvtoxXqCbY
      57v2S8IvuHxZBKYmuKuF7uFJDMda6R3wUhSbht8zc4bQo0CE2UK/0wvo+NAxoZCQlkeCbZrT
      gxOsy4yVmuDzVqomeKXGVa62jFeoJvjSunHtLl8WAQlAfHYJn0pfB9ODjBkcJGXl0LG7nnZl
      GF94HDFJObiP1dHBGB5DJBajCopCXmkV+3a/z3D0NhKjwgIxK0J8JIsHwO9l59u/xxSfT8na
      XKKiIjBekW7VYMRiMIIxna2bNIwmCzVbKxk75yR3TTyKqlKzrYrRSTs5+QmoCpRuLEBRVDbX
      bMWryyVJYnUsvp1SjZRuLEOb7OPln/0zT/79s3ivtg9tMGGzztzkymyNICU5EbNx5i1MYTZS
      kpPOT6tYw2e+8Y1mK1aLBECsjsXXPN1PY90uuocdRCRk8uniTRjUZe6bC3GDWMKRikJMbDzh
      4WHofi/Do6Poy/xxRogbxeIBUBRS0jKwmnT6u7tobmlHkwSIILH4LpCmMTg0RPqaMmru/BRp
      KQkYFNkFEsFh8QCoKvpkP+/UHyPO6IKUMh5/9H5UCYEIAovvAvk9vLmnnSf+0xM8/vjjnDpa
      i88vu0AiOCy+BTCYubM8m3/80TMkmB2kF1RgNMi3vwgOiwdAUbnz4b+gsLcX3RhOWlqK7P6I
      oLFoAIZONfPsc69ijYpictrDo499m+IsaeUpgsPCAfDZ2fHsi3zhP3+fdckRTPa38L1ndvB/
      n/oeRjkZJoLAwgfB7ikG1WhSw/xMTk6im2PRfFP4NTkIFsFh4S2AIYzSDBsvvvDCzLSuk5xR
      gHz5i2CxcADCYvjmE09ep1kR4vpb/DyA5qfjxAl8C+z2aD4P7ceaqa/fx8m+s+i6RsvBfezd
      u5cDLScAGOrtpH5fA4OjU+h46O0ZAmC4v5sxu9QEi9WxhIvhdD58/ZfsPzmErusX/81+hk5y
      Zj5VlRUMHj/MtNfPhBuqa2ooLy5Ac41w+OQ4FbeU0nr4AH7Ny0D/WfyuCY6c6CfKKjXBYnUs
      4XJonbikGJ576m/ZtbYAQ3Q63/nq52edDDMYLeAZ5dCBFtS4NKyqk+mRMer37iU+LZdUwzDx
      mbmYzFaiLAacfo3JkUE+2D3IltvvwqjO1ATDTL3mpbrP5dcEz1dDqgegXtWv+eeMHYhaY33W
      5w8cTV+ZcXV9/jrdK78kr8V8y/jCerIcmnZpvVjCtUBGPv7gn7GhahBzeCSabpi3HsAaGUNG
      hp/2ji7c+nru/eR9aJqPuvd2E1eccr5IWkfTdVTAGhGN1eRgatpNVJwVVVXRdR1FUS6rJ11+
      TfB8talKAE7kqYo6Z2wlAL8OKPOMGwjKVZbF8sedv/535Zbx8j/D5ctiCaNpvPfaC7z676+x
      c38L//L8v+K74ovOdW6EoQkXsfGJGHUXUyODtHUN4nHacaAQm5TJRHc709MTTHsNhBlVzGHh
      lFdV0X5wL3a3/+JMXfhvoP5YF8a6/B8B+ONcPp8X/gXij45ylXle9rBz53dFl3EAzLeMA3EV
      wuWhXcJBsJd9rX38xZ9/ifjIMKbt9jmbN4stBv+5QZqPtJK/qYbklFRiVTstHV1Ub9+G0RRF
      TUUhHR09bKmuxKBYWFOQiWK0Ul1Zhtt9c99jXty8lrALZOFLD93DMz9+limXxrb7Pofpiovh
      FIOR3MJici97LDlrDclZl6ZtMcncckvyxen4hBgArJFxWJf1EYS4dgsGwO91M+1wkbaumif/
      phJdV1ANUsAugseCa/NYTysv/fY99jc0UlyxBbPm5HCfl3975n/M2QoIcTNa8BggMb+M737n
      2+TlZPGVx77Fd5/4Fgk2TYriRdBYwjGAmYfvq+Ef/u5vMCp+cjbeJQUxImgs6b5A0+ZUfvj0
      DzEF4J6aQtxIlnRblJG2Jt5uPI7X58Pn8wfkLJ8QN4Il3BbFj8vvpfaVn7L/nQSUmCy+9x//
      THaDRFBYNAC6auL2j3+a3I1jJGXkkpOeuNwLFIS4YSwcAF3j3Vf/iV0nPWxYk8aH77yOrfAO
      vvHZOwNz2l+IVbZwANxjvNk0wPd/8PdEmlR89rt5/L89jfczd2A2SgDEzW/hAFhi2F5g45kd
      L1FdksWpo/VkrN0s+/8iaCwcAMXIg19/ks6WQ7R1DVF21+coLcqT+wKJoLHoQbBqMFFYuoXC
      0usxO0JcXwsGYPD4XhqGwhjtOsojj3yRMNP8TeB8bjuHmw/j9umYo5MpL86j48gBzp5zkZJT
      REFmIieONnFm0kViRgFrc2LoaDvD2qIcutuOYssoJCHCsiIfUIiFLBgAo8XEztf+jd7BPkZH
      RmbOBEel8a0vP4zxsrPCBrOVjeWVGAwqDR+8z0R6GGdcEWzfWsbuXXVkx+TT54jgtpoyaj/c
      Q35mxcU+wd2TsG2t1ASL1bFgABJzy/nv/zWZn/3iNe6//36MBgNhtqg5JZGKojI22MnRtk4i
      ktdgmBohfJ4+wcqFPsF+6RN8NdIn+JLV7xOsqMSnZnJf5Rp++eqvCVN95G25jz9NS57z1KSM
      fLYnJLO/oRF7dOrCfYIV6RN8NdIn+JLr0Sd4Cf0B3Lz6ei3f+qsn+S9/9R327Xx9TpdI1+RZ
      Dre00Td4Fh8GbEk5uPqP0d527FKf4N4W2tuPz+kTPHHyAMPnXMv+UEJciyVcDm1iQ24M//7a
      G6RZzhGRmDdnF8gSlUBOmorT46eieivhFhM1W6sYP+eY1Sd4bNJOrvQJFjeQJfQHMPDZr3+X
      I83NOPxm7v3MxnmPAaLjEoi+7DGz1Uay1XZx2hRmIzns0vTlfYJl9RerZUnrnmqysmlz9UrP
      ixDX3RKOAby89fY7eHwaus/NH9/bKbdHF0FjkQYZLvY31vOrX/8a1WDE5Lfz6u9rueO226Vb
      vAgKi14OPXXuHGEWC5MTE5hNRp78y+/KHSFE0Fg4AKZwbr/3AdaXluH06jO/yhtl90cEjyWU
      RHp5/sdPEZm7CZtJhYgUvvzZ+5FyABEMltQpPikhjdsf+lNyYiyAguwBiWCxhC2ARpgVfv6T
      p7GYVIjO5K+/+agUxYigsKRG2WuKywgfc85MhydIPbAIGku4L5BKWmYehYWF5KTH0tBwYLnX
      aApxw1jSmeCw8HD8qg+rUWNifAhN05FeqSIYLOHWiBqthxrpGbGDovDFR78s5wFE0Fh8F0g1
      Ur39VuIjLRjDosjPyZBjABE0ltAiyceLz/wILaGA0uxIfvCPO+b0DNY1P/2nO9hXX8+J7sGr
      9Ak+MX+f4D7pEyxWz+IB0P0MT7kpXldEQdE6/M5zaFfcHNfndeE3RrKlcgtjp44y7ryiT7Bz
      hCMnJ+bvE9w5IH2CxapZ/BjAYOFrX32Ef/nJ/8anG3j40a/MuU26yWIjKyOcsTOnmVajsZmd
      2K/oExwXAn2C/dIn+LLHA9An2L/afYL9Dn624yUe/NrX+Lv/WY7XMcbzr/yObaV5GC//FUjX
      ONV6gH57GNu2VmAxGrjnQp/gnbuJW79Qn2AXUXHhQdEnWJU+wbPeb7nma7kakJaxS+4T7LHT
      fGqQcJOCoigYDSbaTrTP/Ax6Gdf0MKdHFarKilB1HffEGdq6BnE77Tj0y/oET01g913ZJ7ie
      abdP+gRfHFj6BF+wUsv48tAuvAWwxnFnkYWn/+llbi3Lo/3gbjLWVs+6JxCAwWQlzqrT3NyM
      wRTG+pISYs+dpLVj+HyfYDM1FYW0d/awuaoSg8KsPsFOtxcsUhgprr9F1joDD3zlLyk8vJ+W
      UwMUbf0TvlhaNOccmCksirLNm2c9FjZfn+Ay6RMsbiyL3xvUaGZ9eQ3ry6/H7AhxfUnXOxHS
      JAAipEkAREiTAIiQJgEQIU0CIEKaBECENAmACGkSABHSJAAipEkAREiTAIiQFpBrkDWfm5aj
      R5hyejCFx1O+sZATF/oEZxdRkDVPn+DjZ1i7LoeutqNESJ9gsUoCsgXQdMgpKKG6ugbDVB8j
      IwOccUWybWs1fZ2teKb66HNEsK2mmrNdbfj8PiYmZvoE90xCnE1qgsXqCMgWwGiyEGH00912
      CLslBbNzpk+wIn2CPzLpE3zJ6vcJXirdT/O+Wgzx+WzdnIH7bDt+u/QJvhbSJ/iSG6NP8BI4
      JgboHfUTYfTS09uHIS77fJ/go1f0CW6VPsHihhKQLYAlMomqChMaoKgGVIOVmm0zfYLzrtYn
      eFPh+T7B2/BKo1SxSgKy5hmMFpJSUmY/eEVf4Dl9gq0zv/oYzWGy+otVI+cBREiTAIiQJgEQ
      IU0CIELa/wdT+OPTB0q/NQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maryam - Busiest Hours ' width='192'>
      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
      Eh8K8P8B1nVYcVupiUIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Maryam - Busiest Hours - Groups ' width='192'>
      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
      l7LutwpOZhYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Maryam - Busiest Hours - Rank' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXAc133nP91zHwBmBvd9g7gvHpIsS6RtHS6rbFnR2om0m2gdH5vyVrbW
      m8SuWle8m1ScUmWzteX1JrGzlU1cchxLia2wksiOZDu2FMskRfAGSIAEcd/XzACDObvf/gES
      5BCDIQgMBtf7VKEw87pf/37d/X7Tr19/+/cUIYRAIjmgqDvtgESyk6QtAHRdJxwOp8ucRLIh
      0hoAkUgkXeYkkg0hu0CSA40MAMmBRgaA5EAjA0ByoJEBINnzxGKxTdeVASDZ8ywuLm66rjGF
      fkhSQCzk59R7l1D0GIeOPEqOw7TTLu1r5BVglzE3PkbJoTbe90gzN3tHdtqdfY8MgF2GEAJF
      VUBVQdd22p19j+wC7TI8+fl0dffiU8MU13butDv7HhkAuwyzM5uOFgsRXSXDYd1pd/Y9qwEQ
      DAYJhULbZui2FmgrQ1YHDa9Xigc3QiAQ2HTd1QCw2WzYbLaUOJSIWCxGMBgkIyNj22xIDi5u
      t3tT9eRNsORAs6V7gPmpUUYm5yitqsNGkL7+IXKKKsjPMuELQJZdMOWLUpzvSZW/EklK2fwV
      QFvm+vA8LS3NZNjM9PT0UtfUwlD/NaKRALPzi3Rf7iEjU3Z5JLuXTV8BIguTTPkWOd/1HhZX
      ETFFwWYyYlMNRNC5fvE9SprbybSZ0HUdTdPQNI1oNJpK/yWSLbWrTQeAKdNDjitEZ0c1p8/2
      YFQUoppOBIEZldrWIyzODbEULsJpMWIwGDAYDJhM8tG+JLVspV1tOgAUs4syzxTnL3ZTfegQ
      Nn2JSxfOk1dcidFkxeWC6tImhiamcVQUbdaMRLKtKOlKiyKHQSXbxcLCghwGlUg2gwwAyYFG
      BoDkQCMDQHKgkQEgOdDIAJAcaGQASA40MgD2MTMzM5w5c2an3djVbEENKvjpWz8gK6eQwvJq
      FseuMRsykuVyU1VgZ2hK4DJ58eLhUHle6jyWrIuu67z88st4PB4URWFpaYljx47ttFu7mi0E
      QIRIBIxmK5lOO1OBMCaLGbfLDYTwz03iNxk43JGHEGL1T9f1lDkvWctzzz1HaWkpdrudhYUF
      xsbG9v0x30q72qIUQhBemud87wQPH25G6Bo///kv6GivoetsP9YsF0c6mkDoq1IIp9O5eXMS
      SQK8Xi8ul2tTdTd9BdCCfrr7RzGJCM6sbAau9xAVRnSDGRWF/NJqMo1eegcnqK8sRFVVVFXF
      YDBs1qTkPoz6Iwzc8x5xa56dLOv+PuZbaVebDgCDLZP62kqiGthtVoSusRwMUVVdg0GFGjsY
      1Hxy5EvwaSOmC4Kx+Au6JgRRTTAfjD8PDrOK07y/A2MjbOmVSLPFhvnWZ8VgjOve3A5Iqf9P
      Pe8M+phcvPMCiKrA8805666/HNU4PbYUV1aXbaU+Z/uSIOwVZF6gPYgQcPfvvC7n+dw08jmA
      5EAjA0ByoJEBIDnQyACQHGjkTfAu5vpskLtvd+0mA8VZlp1zaB8iA2CHiemC5Uj8PAAWo4rF
      qHJ62B83wlOUad62AIhGo0xOTlJQUHCghq63FABz0xMEQlGyPLlk2oxMTE7hzi3AYhBEYmAx
      KQSCUZwOOd68HjNLEf6hezau7KGyTNqK05M948qVK3g8Ht5++21yc3M5ffo0zz//PIqipMX+
      TrOFewDB9f6bOJ1OzCYjPRfPE1MMdJ09R2R5nqGROQauXca7LJ8E72bC4TALCwvY7XZOnDhB
      NBolTZlydgVbUoPGQlEGbt6kvLaRQEzQWFTIzOgIUXRu9lwkv7qGjpwMmRoxCZq2dhokXdcT
      HichxLoNNBqNJlREapqGSPBjfttGS0sLP/vZz+jp6WFqaoonnnhi9VztFXYkNaIQZh49cRxi
      IU5f6MOgKCuyVEBFpbymFp9/AU0IjLfESjI14loMhrWNVlXVhMdJURRMJlPC7onJZEJV127L
      YDBgSBAAt21EYjqPf+BDPP6BD62UK2Ay7K3BwR1JjaiHlrhw9TpoUfKKqrGGZzjb1YXR5sKg
      qljtmRTnmuntH6WxtnSzZiTbzF+dHiMcuxM4hZkW/k1HwQ56lF62oAbN4HDn3ZO45VBUdedb
      lWPlf1buZi1IJNuPHAZNE/5gFH8ofkAgL0OO6e80MgDSxOUxP+/eXIgr+7WHZddwp9lbdzsS
      SYqRASA50MgAkBxoZABIDjQyACQHGhkAkgPNloZBhdA4885PqO78AJHZfkZnAziz3NSUuJhZ
      ALc9wuSiSlWpfBom2Z1s6QowNdgHRjPBqM7szBxFJaVUV5ShxyIsLi7R3TtMcVF2qnyVSFLO
      5rVAkSVGfTolOU50oLL2EL7FAKdOneFoewX9PRcpPNSExaBKNSiso9SMobNWqZZONWh8gpU7
      NvYSO6IGDQUCiFiYazcGMQdd1ObZKCgqZnBwGIFKTcsRtMVhJhfyKHA7DrwaVFXXXmwNBmOC
      5p9eNSgo3B0Et23sJXZEDWp353P0SD7LvnKE1Q2hBXquXKG+pR2r1UBBHmRWtjM9t4jAsVkz
      Esm2smUtkD3rVh/fkk1r253+ftatgMzPk/cAkt2LHAaVHGhkAEgONDIAJAcaGQCSA40MAMmB
      RgaA5EAjX4mUJEQIwczMDOfOncNkMnHkyBGysrJ22q2UI68AKWZmMczYQnD1b8Ib3GmXNkU4
      HObkyZNUVFQwPT3NyZMniUQiO+1Wykl6BQh4p5kNqpQV5JAoVaTQo/zoH1+n6fhz6DPXGfMu
      o5octFTnMDYDbusisxEndQdoouw3Lk0ysnCn0VtNKr/9dN0OerQ5dF0nIyMDh8OBy+VCURQi
      kQhms/n+lfcQSQNAAc7/65v804wXR0ENL/3SU3HLB651k19ahqYLJuYXOXb0GF3vnUETbkKB
      JW7MLnL4SGWceGu/551MtHfr77OAhGqg9es8aHkyEtURt8ptNhudnZ10d3fzwQ9+EACz2bxr
      z99m/UoaAKrBiM1qA7GAFo2ffzayNMPEkkqeRSMUDq+cR0VBQUFHMDLYT3ZZJSoKQtxRg+6l
      nJOb4t4TIVbUiuspNddTgyY6TkKIFXVngpOdzEaiGLtj415/V2zcnF5iQXXhrunkwogPgI5y
      N+ouzBq93vHaCEkDIBIK4C5r4Jcfehhhip/hXSgW8j12ZkZGMFr8ZJhUBkdGCQsDJlQq69uw
      atPcHJ+lqjhnVQ1qNO7v++41Sk0FjEbjA6tBEx0nRVEwGo0J1aArNtY2gmRq0BUba9WgRqOR
      8yN+usd8cXU6K3Mw7sK8oesdr42QtJZ/qp8rvYv88PWLhA1mvvq7X1xdZnFkUlOTSXlpMRit
      GJV8pqdm6Oxox2zQqSgFizmPpeXQphyTSNJB0nC2Ol10//wtqo48ipm1l1cAk8WGyaCgqEby
      Cwuxmg2oBhMWiwkUFafDvk4vVyLZeZJeATLzKvn05/8zh2pK6SnPT5dPEknaSHoFGL92mlO9
      U6iqgb97/e/S5ZNEkjaSXgGK6jrxvfVN/lff29S1H0+XTxJJ2kgaAGZnDl/40n9F1wWnzpxJ
      l08SSdrYwJjWyjBZYUHhtjsjkaSbpFeA6RtnefPKPFPdpwnZc/nyF34jXX5JJGkh6RUgGl6m
      79y7mMs7iC3NJltVItmTJL0CZJc18fSHLbS2NzM12Ra/UGgMXO/DH9apqa0jtjRL/8gkVqeL
      uvJ8loKQaYdpb4SCXNd27oNEsmmSBkDQN8W57kE6j3RSUV4Uv1DoeArLKVaWOXf1Oi5DiPrm
      DuwmhdDiFFMzOqP+EYoPtW+n/xLJlkgaALpQCc7d5M+/+efYskv43IvP3lmomgj7xzh3tZea
      tkcQvnGuXTlPDAutNR5uXDpLUWMrbof5QKVGXCNUE8nSFu7e1IhCrN1WLBYDffc919+21Iju
      ggoaq0vRPOVYY/EGhBDkFpXz/mwP5y4PcLijiTKjkfdOnyJGDtXNHfjnRglGS7CZDAcmNWIi
      MdxK2sK9lRpRUdb6azQad+Uk2ltpV0n3ZqT7XxnWCnCaBKfe+3ncsljQx7lz57nSc4PisjLG
      Bq9z/vx57O58zEYLmZlO2lsPMTIymVAjL5HsBpJeAfIqGln6p//Hjy4uUtH8/rhlJruLw4fv
      mig73035XcuLbCv/66rcqfJVIkk56waAb36a2YUgz//KC+i6wGixp9MviSQtrNsFWpiZ4N0f
      vc5fvPoGfX1X+ZM//6s0uiWRpId1A6DiUBtPf+hxzEYj5WXF+/9VRsmBJOk9gKe0mV/6kGB4
      dJrf+i//KV0+SXY5QggGBwdZWFigvr4eu33vdo+TjgJ5x3v52aVxnnrqKYqyM9Plk2QXI4Tg
      1VdfZWRkBKfTyWuvvcbg4OBOu7VpkqdFMVqZu9nF174+giOnlN/4d8+lyy/JLkUIga7rNDc3
      43A4WFhYYH5+noqKip12bVMkDQBXfjltjTVMLARoamxMl0+SXYyqqjz99NO888476LpOYWEh
      HR0dO+3WpknaBRq7+gsmlBI+8+v/nh+efDVdPkl2OdnZ2Tz77LM899xztLS08O677+60S5sm
      +SuRh47h6vprvv4nl/jgR34pfqEW4uLFHmJaBEdOOY7YPOPeIIrJTmtNDqMz4LYsMhfNOFCp
      Efc7QgheeeUV6urqMBqNBINBgsG9mf8U7hMARmsGL/76f0CIBBoX1UJzawtTozeZi0aZWFi6
      lRrxPTThIbjoZ35umSOHqxBCxP3tZ9ZLjZiwHEFCpRqpTY2YcIlYLzXi7XOUoNatomeeeQaL
      xYLD4SAcDjMyMrLj5zXlqRHfefPvMdgyWbaX8cThmrUrKAreuSlmfcuYMxwEV1Mjgo5gYnQY
      d3Epyq3UiLqubymF3Z5hndSIiU6QrukJsy3pInWpEfX1UiOuYyOZv5qmEdMEqtlOVIB3aSXp
      WWlZ+Y6e121JjViQ4+LP/uLbLODi7Fs5GD1l/PbnXlxdHl324V3WyPZkMTm3RKbZwM2hodXU
      iOV1zdjFDP2jM1SX5srUiAkUnAaDIbEaVEldakT1vqkR17ORQL1qNHBucI7Xz47Elb/0WDUN
      RTs3d8C2pEas7TzB75VV8/OzPYSjGsfe91jccpMtk+ysKGEN2luzUdGYnZ2npLMdk0FQWQZm
      Ux7LwfA6FiSSnSfpKNDywgTnr0/SWl/O1//0G/ELFQWXJ4f83BwM6kpqxNy8PCwmA6pqxGw2
      gqJit9tkakTJriX5TbDRRCSwyOzcHKq6v7suD4IQAv2ePrKCgqrKUN9rJH8pvrKdT3/SSv/o
      PL/zhf+YLp92PTFd8KXvnI0raytz89Lx2h3ySLJZkgaAEIKiynpKqpSEIwwSyV4n+SuRl9/m
      H9+9Bgj+9BvfSLaqRLInWfcK4J/o48/+8rtMRpz0vO3BU9GaTr8kkrSwbgBkFtbxld/7KnNB
      hVyXAxKMC0ske52k9wALoz380V++SVNNCUZXEZ/+5Y+myy+JJC0kDQCrI5Oq2kY+/PT7UEzW
      +IVCZ2JkkGlvgMqaOkRgjv7RqdXUiIvLkGkXzPgiFOTKzBCS3UnSfo3B6qI028zZs2c5f6U3
      fqEeAYuLproyurt7GZ+YpL65ncbaSmLhRaZnffRc7sbqcGyn/5JdhN/v54c//CE+nw8hBMPD
      wzvt0n1JegWIRYJMTU2BiDJwZYRnn3r8zkKDlTy3TtfZ85QdakH3TnDtynkiwkR7bQ7XL52l
      uLEVl33/pUaM6QmEbeulLdxnqRF1LbGNaDTKT37yExoaGnj11Vf51V/9Vbq6uigs3P55JbYv
      NWJxLZ/5TBWg89WX/zh+oYhx6t0ztD78KBlWE9FMG6Um063UiHnUNnfgmxthOVqCfb+lRkzQ
      CNT10hbus9SIaoLUiLfPq9PpxOPx8Mwzz/Ctb32LjIyMtJzvrbSrpAHgHb/B3/7TTwHBQ48/
      HbdMhPyEVTM3rl7Bk18Cy7PML4ZweAoxm6xkZlqpLGlgcGSS2qriTTkn2Vs8/vjjLC0tUVRU
      xIsvvsj4+PhOu3Rfkr8TXFBBVaGHm5NeCgvjp0lVbB4++Pj77irJjUuNWFiw8r+uSs4NcFDQ
      NA1VVfH5fOi6Tk9PD/X19TvtVlKSBsD41V/Q47XzuRef5Pf/x9fp+L3fTZdfkj3Ij3/8Y8bH
      x8nKykIIwdLS0k67dF+SBkBWfinege/yd9+bxFNQlS6fJHuUEydOMD8/T1lZGbqu09XVtdMu
      3Zd1A0DXooRUN7/zW7/JYiBAVJdyaElynE4nTqcTWLnJPnr06A57dH/WbdXzA1387XtLfP6F
      J7A7Mvj9P/xDvvLlL6fTN8keYtYf4qvfPx9XdryxkI8fq9gZhzbIugFg9xQy1fddRifbCc7e
      QDPIp7mS9REIovcMD2sJnpfsNpIEQBm/8Wsf4803XseUmc8XfvMz6fRLIkkLSTr2CoWVDbxU
      2ZA+bySSNCM1zpJtR9M03nzzTQYHB3n99de5fPnyTru0yuYDQMTouXSBrq6zjM/48M+Oc/bs
      Wa4PTRAN+Zic8hFZmmNgVM4wf9C5dOkShYWFnDx5kqamJvr6+nZNgrTNB4CuU1nfQntzPcPD
      Q/T2D9PeeZj5yWFi0RA+/xKXum9QWOBJobuSvYjJZMJkMnHixAkqKyvRdT2hnmkn2PzgvsGM
      7p/mF1eu03z4KL1XzmFUFcwoRNC5frmL4sY2rEZVqkEPgBpUi639Rb9to66ujqWlJTIyMhBC
      0N7evtoeUsG2qUGTWw3Sdbmf973/fRhVBZMCy5EoIV3HjEpt61Ei3mFmF/PJybBKNeg+V4Ma
      jIZ1bYRCIQKBAIFAAIAzZ85QWVmZsjSZ26YGTYaIxbBYTVy+eAFPfglNjQ30Xu2msq4Rk8VA
      bja4ylsZn/EjMqz336Bk3zIzM8N3v/tdmpqaAFbeMdklbDoAFEsGDx07ElfW2ta++tljXvlf
      cnvGbMmBpaSkhOeff57KykoURaG0tHQf3ANIJBskqukUl5YTia100eobGjEY1naZdgIZAJJt
      5yt/c4a5xTtZwos9Dv77r+wOoZx8ECY50MgAkOwK/H4/i4uLabcru0CSHSMajfK1r32N4uJi
      RkdHMZvNfPazn03rzPMyACQ7htFo5Pjx49y8eZPjx4/jcrnS2vhBdoEkO4iiKBw9epSPfexj
      dHd3Y7Olf8h8SwEgdI3l5ZU5YqPhIDMzM8wt+NH1GJFoDCE0giE5R5gkOTabjU996lMsLi4y
      O5te8eQWukAafd2XmQ4IHnu4g4G+bhRnPhlOlUhgjqEpgVWfhswyygssqfNYsm/QNI2XX36Z
      nJwcAIaHh/n85z+fVh+2EAAGDjW3ELp0FQAtphNYmEVR83FZFUb7e3EVFdGZ74oTw8VisRS5
      vnMketVPF4JYLMaaKbHFLRHZenP7Jti+LvSEx0nctpFgW7FYLPE8wevM7KPrD24j2VzEiYRt
      t/dj7abEqu1HHnmExx9fSbl54cKF1X15ENbbl42Qspvgho5jCCE4c+oUBZ5KsvPyCC4vIVjp
      66mqiqqqu+YJ4FYQCZqtoii39m2tGM5gMCR89J9IIAcr8wQnOk63bSTalsFgQEk0T7CqoCaQ
      3Kmr/t5r5La/CfxS1YQiuZVzm8zftUZu2z5x4sTq/nR0dKAoygPLJLbSrragBg1z5XIPQ8Nj
      OFwelOAc/mCMmMGKUVFxZuVQbl+m+/owzXVlqzu2WzQgWyLBPiisnPBEe/eg5beXPWj5OksS
      NmbWORcKt8sTLFOSbSuh5aT+/ujCMN0j83Hln32qGbvlwZvlZtvVFt4HsNDc3kFze8etgqK4
      xTUr6WFwF2zagmSfMzSzyLn+mbiy2C2p+fLyMlarlTNnzhCJRHj00Ue3pfcgh0Eluw4hBD/4
      wQ8YGRnB5/ORnZ3NqVOntsWWDADJrsRoNNLb24uiKPT39+N2b09eKhkAkl2Hoig888wzFBQU
      EAwGaWlpoaFhe9LzyABIgq4LwlEt7k+TE4ZvO0IIhBAcOnSID3/4w2RnZ/Pmm29uiy2pBUrC
      xYEZ/uh78RmOP/1UE8dbSnbIo4PDN77xDex2OwaDgWg0Sn5+/v0rbQIZAJJdh6IofPzjH8fh
      cODxeIhEIly8eHFbbMkAkOxKSktLVz+bzeZtS7UuA0Cy6zjdO8H//eGluLLPfbiVY4dSP+Pk
      lm6CtWiIianZ1c89Vy7jC4TRoiEWl0IILcLsvC8ljkoODpGohncpHPcXSZB4KxVsIQA0bl6/
      wdDIykyAl86do6S6lkvnu4iEfIxPerl2+SIYpRJUsnvZkhq0tqGB5Vtq0IhiINNmxWE2EkXn
      xpVzFB1qJCfTumdTIyZSOK6naJWpEddPjbj2kIhb/m5c1appiY/JbfvpT414DyqgCYGGwIhK
      dX0zvoVJwrFyLEZ1T6ZGTKQ9MRgMCVP6ydSI66dGXHtIlFv+rnXMaDSuc6wSH5Pb9jfbrjbf
      BdLCXLl4iemZKW4MjVNZks+5ri4c7kKMBhOOjAxamyoZGBq/VyEvkewatq4Gvasop6hi9XPp
      rXeb6zM3bUEi2XakFEJyoJEBIDnQyACQHGhkAEgONDIAJAeaHdECLS4usrS0BMD09DStra37
      42V5ybbiXQrxqf/5RlzZEx0VvPhY5aa3mfYA0HWd1157jfz8fKanp8nNzcXlclFeXp5uVyR7
      kHtzMt2db8nr9fLGG28wPj5OQ0MDTzzxBBZLcilO2rtAQgjsdjtlZWVYrVby8vIIh2X6RMnW
      eeutt/joRz9KY2MjbW1t/PSnP71vnZQFwFDfJU6fPUfP9QHCgVkGhmbxTQ1xfXg6bj2DwcDD
      Dz9MIBCgpaUFn89HdXV1qtyQHGBycnJ49913GRkZwe1243Q671snZV2guZk5LK4CSoqLEdoC
      oeUgvVPzdB7pWLNuZWUllZUr/basrCyuXbu2OoOgRLJZjh8/zszMDI899hhWq5Xa2tr71klZ
      ALQ99H5isSinTp/maGcNA3095FXXYVCUODVoJBLh5ZdfJjc3F0VRmJ+f58knn9yVKlGpBo1n
      p9WgsUT5R2+1rWg0ytDQ0OoUrJqmMTo6yic+8Yk1de4mZQEwNjpMpjsHRVUBleqmTkyRCYam
      FigvcK+qQc1mM88++ywNDQ2YzWbGxsYIBAK7UiUq1aDx7LQa1JjgfNzOC2oymejr68NsNpOT
      k4OmaRiNxvu2q5QFQGFBASNjU3QeOYrVDGXFYLPm4vMvr1m3ra1t9XNxcfED2ZmcnMThcJCR
      kbFlnyX7iyeeeIJAIIDb7UbX9Q0l00pZAJisDqqqq1a/357sIyvrTkOd9S3zpb94J67eBzoq
      +MTxxnW3q2kar7/++ur3gYEBXnjhBRkAkjiGprxEoitdpNnAHCajSlVVVdI6p0+fTu9zgJim
      MzgV/47wnD+YtI6qqiwvL/ORj3wEAJfLlXK/xmb9zHjjr1QNZTkptyPZPv7glbcZnPSufs93
      O/j2l59PWmd0dHT3Z4VQFIVPfvKTWCwWFEXh2LFjmM3mlNr4h3d7+d7bV+PK/upLH0+pDcnu
      Iysra/drgYQQvPLKK3zzm9/E5/MxMDCA1+u9f0WJ5D488sgjqbsCCF3D5/djd2ZhUgUxDYxG
      hXAkhtVy/1/sP/jWvzB31w1zoSeDL/7bx4lEIhQWFnL8+HG+//3vU1dXl3B4UiJ5UE6ePJm6
      AOi7ch5hczF37SaHm0oYmhLYxAy6s4SKwvsHQM/gNBNzd2YK9xaEALBYLFgsFpxOJ8ePH+e1
      117jpZdeSpXbkn3OnG8ZXyAUV1aal4XJuDIkn7IA8IU0jrbWcG7hDFEE4wN9ZObn01mz9bzu
      Tz75JAAVFRV88Ytf3PL2JAeHv/nRRb73s+64sr/+yicpysnk+PHjKbwJvvW0Q7AiMMryeAiH
      llcmydvCZv/33/4r/3y6L67s2//tBdwZDz6p8vm+MQKhyOp3i8nI0YbSJDUk+5V5/zK9E0up
      C4CCLBtn3juLYnJiUBQyXLlU2AOrk+RtlmA4uuYSpgvBhetjfOef41OXv/BkJ01VBbx5+lpc
      eWm+i7baEv74Oz/lxuidiZgLPBmc/KNf37Rvkr1L98Akv/31f0hdAJTVtXB3M6+9JcTzpD6f
      KQBTc37eOtMbV3ais4aKQg9f+j9/H1f+3Ik22mplTn/JWlYDIBqNbusk1pqmoWsxcjLitRlW
      IwSDQTwOE7HonZcX3A4jwWAQu1klL8saVycaCWNQBAVue1y5QdGJRMIUehxx5U7ryrY8TjP5
      rjtdp+xMC8FgEKsRcjPib9Rj0QhCi+Kxx+tPVBEjHAqRec99vVnVCQaDmBUNh+GOJsdiWNk/
      RY9iv2ce32gkhEDBQvxxF7HIyrZElLv1Yqq2si1Vi2DS74jlFEUhGAyiRaKoWiRuW9GwiqYo
      GO8p16MKwSBYlRiKcsdfk1BXbBPDaYzXFoVDIdCiZJjueSklFiEaEWRZ4ju7JkUjGAySYVbQ
      rHeWOc0r+2FRBW5b/Eh8JBxCFTE8jvjfZkXXiETCZDvjy23GlbbrshvjzqHHYSIYDGIzKeRm
      xr8UE4tGUIVGvsuGIm5JC9MRAOFwGLvdvmaZrusJBVAPWp7KbaXDxm1VZyJx216ykcptbcbG
      4uJiQmnMRmyshpPJZNpWRWYsFkMIgc229uZ1Mwcp0aTbt+eW2isNR9pIzbkNhUIP1K7u9ndX
      SCHWi/gHLU82E/1mtrUeqfRX2ti4jQdNnLARf9MeACIW5uLFy4Si0H70MNZEYvV7GB+6wdS8
      H0wO2poOkUBGvtaOFubH//JzHj9xArPx/oqPoH+W7r4h7FnZNNZW3Hd9PRbmyqXLRDRBeV0z
      uVnrD8vqWpT+notomWXUl+cxdL2HGe8S+WV1lOYnFvctzk/xXvcgH3zsIYL+Oa7dGCIajdHQ
      fpgMy1pdvNBj3Lx2hZA1j6aqIoQQ9PecRXeUU1eRl9BGwDvL6UvXOfHYwyh6jGT0Gw0AAAQ1
      SURBVJ4rV4joBg41N2E3JbAhNAZ7e1hUM2mtK2f4xlVmF4PYM3Oor0480jc1OsD4tBfNYKGz
      qYaLFy4QxUhrWztWU4Jf51iIy5d7iGoaBeV1EJhmemERzE46murWPcYguNnbzbwvQGFVI8U5
      91cLB7wz6dcCzYwOkFFcw+GGPLr7JjdUJ6egjPb2djT/PNENpZoWDPT1olgsCd86SkTPtX7K
      K8opL9nYsFV4aQ7NkkNLXQlDI8n3Qwid4uJiQpEIoDMxv8ThI52MD91Yt45isuPOXLn5N1kz
      aO3ooCLHzMR8YvWsEDoFhcVEIysJBsL+abwRwfJiErWt0YrH5QABc+P9CHsO5ZUV2Nb9wdDJ
      LShBj63YGJ/10tbWxsL0+LomXHnFdHS0E13yMjN6DWdJEw2lbm6OzqxTw0B9aztNdZWMT0yQ
      W7Ry7gPe2XXWv0UswPQiHD56lNH+a8nXvYXJtgNiuHA4itVqxpSZieb3b6iOQYlx9tQpcivr
      sGzA45B/liWcZDs3rhr1+70Eg0EuvneG5Q2MBZismQTmhjl/5Qa5ucmfdhuMFuzW275EURUT
      imIE1tc0OTMyVh8gGk1GhnsvMxywUlPgSLi+ajDjsN8a7RA63X0jNNYmf/7icDpXr6b+hTki
      MY2ZoWv0jS0kXF9RTDgdt0fkBE6zwrmuLgy29VOAGxWdc++dIq+smuhyEIfDjtVmIxhOHJiK
      0YR/apiungGa6mtRRYyzp35BWXV90n0hGkYx21BQUBK8MpoIk9mY/gBwebKYmZxlemAYV2nR
      hupcPH+euvYjlBdmb2j94HKQyLKXgYEhBkY3dpXxZGWSlZ2Hw6KS4LXXNQTmJ7DnV9HRdojx
      4bEN2VjBTCy6THjZB4a1I2KJmB29QcCYzeGWetSN9INjIQSC7itXGRoeILIB7WB2fhGqolKQ
      6yYc2cj72VEWFjU6OjsJ+eZY75D1XLpAWUM71aX5uHPzmRwbZWpqhux13tbSw16uDi3wyENH
      sJsNXLpwgUNtRykr8CR3x5qBtjRHOLiIMFmTr3uLmYGrd4ZBt5tYLLYyJux0Mj5yk6WYmdrK
      kg3d2Az0deMNRDBZHNTX17GBLj0A83OzZLmzMWzgpkHXIvRdu0ZmXimFue77yjeE0Bkb6mdh
      WaeutgZLgj7zbcIBLz19N9F1KCyrwmXR6B+apPrQIezmxLdhIzd7mV5YwmS2U5SfyfDYNApQ
      UduI27k22VMs6OfytX50XZBfUkFJvgctFsS3qOFxJ04PMjZ4nck5P0ajhfrmJubHB/CGFOqq
      KxIeMz28xMWe6+i6Tk5hGR6b4ObwBMXlNeS4El+Zhvuvrbz0ZLDS2lLP5HA/y8JKTXlxwnOv
      Bf1cuHoDVVHILSon4h3DtxxDtThpa0yc5WFhYQG3282Sd4abIzMcaqjHsoFGMj85wv8HOZel
      k4olAikAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Maryam - Days Since Prior Order' width='192'>
      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
      O3KPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Maryam - Number of Items Purchased per Order' width='192'>
      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
      RghAcKz5/xg2CjCQlCGGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Maryam - Number of Products Sold per Department ' width='192'>
      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
      7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top 10 Products in the Busiest Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top 10 Reordered Products ' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Early Birds' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Evening Hours ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy993NcZ3qg+5zOjdAAGgARiByIRBIAAeYgihAVOCIlUvJoLEtjj711b93x
      9e61b5Wr9qf1P7C7dauufddrr3dsz3o0tkRSDJI4FCVRFEmRICKRc47dCJ3TOef+AKLJJnJ3
      UwDFfqpYBHD6vOf9Tp/3fOkNgizLMhEivKAoNluBCBE2k001AKfTuZmXjxBhcw3A7XZv5uUj
      RIgMgSK82EQMIMILTcQAIrzQRAwgwgtNxAA2EZfLtdkqbCpbof0vrAFYZqYZnTSxmduAm/kA
      iF438xb7pl0fNrP9MpaZaQaGRl9MA/DYzLT3TeA1DdJvsm22Oj84ks9LT08r3d0jm63KpuDz
      OjDNOTFo3S+mAdhmzRi3Z5FTks/MwNhmq/ODo1CpKSopQatSbrYqm4JKHU12VgrDQ5MvpgGo
      tFpEtxufw4EiOnqz1YnwAyOJHh7cryWzqOLFNIDYxHQ8s0PUt41RsiNts9X5wRG9Dlqa2pgy
      jTIyad5sdX5wvPZZ7B4Y7u9C2Exv0Lm5OeLj48Mq0+PxoNFowirT6/WiVCpRKML7vnhe2u/z
      +VAoFD/K9m/pHkCSfDhdC/5CsiQyO2PG6faueo7D4Vj1uCzL/s84bBZMJhMm8wyitPJ7wO12
      I4riqnI9bhdeUQLAabcyN28NeYVJlsTH7ZelZ9p+3yPdl2M97fe6XXh9j9s/+0zaP4PT7Vn1
      nLXaD4/b77Rbt7IBeOlsbqapoxeAztYm5qx2rLbQlu7Gh/r49vs6AHxeLy6Xi6a6B7h8wX9b
      DouZxto7DJmceKyTNLb3MzXSR+/IdAiaeul8+JDGtm4AulqamA1D+yeG+7j5qP2ib7H9tbhW
      f75XxWmZoenBHQZMDry2aRrb+zCN9dMzNBmCpj46W1tpaO0EoLu1mRmLDYs11Pb3883dBwtX
      8Hq3sgGoKdlZhl6jBESGR8aYnzFhsYfmQp2enU9a8kK3a0hIJDUxhriULKI1wd+KKEMiJYXZ
      ACjVOiSPA4vdiV4XylBETfHOMqK0j9o/OoZ11sy8ba033OqkZeWT/qj9sfGJpCUZMCRnEhNC
      +/UGI6U7cgBQqLRIHgfzNid6vTYETVUUl5URrVWx8P2PYpsLvf2pmXls35YAQGy8cSsbwJMI
      GBJTKK+oZGZimJU7643T2d5FYXFh2OTZ58wYUrLZkbsd8+xcmKQKxBqT2V1ewezkCCG8rJfQ
      1d5BYUlR2OQ55s3EJmdRlJvxTNo/PzUa1varwigrvHidNLe2Mz41g9GYRKoxmoaGBvSGpJCs
      dqi3g/GxMdSaKIoKM/Eqo4nThrYePm+eoLNnCBuzxO/IwG4apntGJjkrBMPyOXnY2sH4pIkE
      YzJpxlgaGhrQxSYSirZDfZ2Mj42hUusp3pGNWxFNvC609ltmJunqHmRemiGhKAPHzDBdczJJ
      mQXBC/W5eNjWwfjEFAnGZNKTDNQ3NKCJMYbU/uH+roX2q3QUFeU8XgVyuVx4vatPsMKNzWYj
      JiZmy8t0Op1oNBqUyvBuHD0v7Xe5XKhUKlSq8L4vt0L7/S3SaDRhb+BaeDwe9Hr9lpcpSRJa
      rTbs9+d5ab8sy8/k+dgK7fe36Fms866FUqkM+019VjKfJ10j7V+/zOdkEhwhwrMhYgARXmgi
      BhDhhSZiABFeaCIGEOGFZutuhC3DSo6rgiD8wJpE+LHwXBnA4OAgn3/+OYIgkJ6eTmdnJ3/x
      F38R9g2qCC8Oz5UB5OTkcOrUKTo7Ozly5Ag224sXzxshvAQ9B5BlidGhfmYsjif+JjLU38u8
      3Q2yyGBfD52dnTg8Em67hd7+IcQQncSzsrLIzMzk1q1bHD9+PPL2jxASQRvAaNdDnKpYetqa
      cD8KhOhrbUKINtLaWI/HMY/ZKZOdnY1W4aO+uY2EGAVNLT0hKTwzM8P9+/d5+PAhFy9eRJLC
      6Rsa4UUj6CHQuNVDdVES6tkx5txeUlRa5pwS5dsScI+qmPGC1zpLS/Mc+UWF6GLjMCZn0DNQ
      iyRJSJKEKIr4fL4NXXdsbIzy8nL6+voQBMEfrrhIMDLXQhRFRFEM+2T7WekabpmLIZE/xvYH
      bQA6hYDLJ+MSReKVCx2JWgE+UcYlQmpMHPv270O0DNIwNIMgiiD7QFD6/Y6C8QUpKirC6XTi
      drsRBAGNRhPwxUR8YcIvc9ET9HnQdaMyg776jh15NDfUoYmOI1Yj09beTX5eJi0N9Qs+6445
      GnuHEX0+Ssormepv58GDenIKdwZ7SWDB2+/KlSu43W6ysrJCkhUhQtAGoI0xsnev0f97aclC
      8Ed1dYr/b5WVif6fY4p2khfsxZ5gZGSEkpIShoeHsVqtSJK0ZSfC9+/fZ3R0FKVSSX5+PmVl
      ZZutUoSneO52ggsLC5mZmcFsNlNYWLhlH35YyFBQWVnJ3r17yczM3Gx1IizDc7UPAAs9gEaj
      4Y//+I83W5U1sVqtNDY2olKpyM/Px2AwbLZKEZ7iuTMAg8HAzZs3mZ6eJiEhgePHj//ggTzr
      RalUYjAYiImJITY2drPVibAMz5UByLKMzWbjT//0TxkdHcVoNG7Zhx/g8OHDjI2NIUnSDx5u
      GmF9bN2nZxlmZma4desW58+fZ3p6mi+//HJLb4Q1Njby2Wef0dnZSX19/WarE2EZnqvXksPh
      oKSkhLm5OSorK/0p+7ZqL2Cz2di/fz8Gg4H+/v7NVifCMmzNJ2cFjEYjQ0NDzM3NcfPmTVQq
      1ZZeBTp58iSVlZXMzs5y9OjRzVYnwjI8Vz1AdHQ0b7311marsW6am5vp6elBo9FQX1/PK6+8
      stkqRXiK58oABgYGqK2tRRRF9Ho9oijy9ttvhzQE8ng8NDU1+ecSgiBQWloaloRNU1NTVFdX
      U1dXtyUKwkVYStBPjs9lpb7uAW3dAyw6OLtts9TX1dPZNwyALLr59vY9ALrammhqamJsejZo
      ZXNycigtLaWqqoozZ86g1WpXjBJbL0qlku3bt9PT00N2djZ2u53p6VCyOj/m+PHjDA4OEhMT
      Q01NTVhkRggvQRtAZ1sHhbv3IDhmsLoXvO+6OnsoLq/AZR7HJcv0dnTgFn0gi8xZ3RQUFJKW
      FFpBhLy8PO7fv8/FixeRZTnkCbBSqSQtbaFKjNVqZX5+PmxLljdu3KCgoIBTp06FPQNahPAQ
      9DdtFyFGrSBKpcLpEzFoVXgk0KgUxKgEzOZp3Jp44vRuQCAjPYWR4X4coprykoKg3aGVSiV5
      eXk4HA4yMjKWFG4I1sX2zTff5LvvviMzM5PExMQAGcG6Q+fk5HD+/Hlyc3PJz8+npKQkLLqu
      RsQd+gdyh94WrWJs1s6Mw0mxRsHs7DyxWgWzFidml0iW24HLNsfQ4CCp6dlotVHkJSdS19IT
      kjt0d3c3kiRhtVrp6ekhPz8/QEYwMiVJ4sqVK5hMJsxmM+np6f5eYVHmRuU2NjaSk5PDn//5
      n+N2u6mrq1ty/lZwB14PP2Z36KDHD9nFu3BODZKaU4ROJeByuSko3cXMaB85xWWkbs+hqrKC
      48dfJjN9G4LPSWfvCBXlu4K9JADJycl0dnby4MEDXC5XWJZBZVkmJiaG9PR0ioqKmJsLPa+9
      yWTyT6xlWcZkMoUsM0L4ee6K5MmyzNTUFF6vF5VKRUpKSkDXHGzhNY/Hw+joKGNjYxw8eDBg
      bmGz2dBqtajV6nXLczqdfPrppygUClwuF6dOnSIpKSngM8+iSNyzkGm329FoNBtq/3rYCu1/
      rpZBAXp7e2ltbSUjIwOdTkdKSsraJ62BJElcvHiRsbExDh8+zODgILm5uSHJ1Ov1/OxnPwtZ
      twjPludqJ9hsNjM6OorVakWtVof1jeR0OsnJyWFmZibkpdVFZFmmqamJ4eFh5ufnwyIzQnh5
      rgxArVaTmZnJ/v37iY2NDVs9XEEQeO2111CpVGRmZob89l/kyy+/xOv10tzczJ07d8IiM0J4
      ea4MwGAw4PP5cLvd5OTk8PDhw7B4g8qyzGeffUZNTQ2lpaVhW+7TarXMzs7S09ODVhtKxcQI
      z4rnbg6QlJTE1atXMZlMuFyusHmCbtu2jY8++oikpCSOHDlCQkJCyDLLy8sxm83k5OQsmQAH
      i8Ph4Pr16wiCQHR0NC+//PKW9YZ9HniuDMDn8xEVFcVPfvIT7HY7e/fuDVmmLMv09CzsTVRU
      VNDd3R226K3vvvuOkydPolAo+Pzzzzl9+nTIMkdHR8nLy2PXrtCWkyMs8FwZgNfrxWQy0dHR
      ASx4hx44cCCkIYssyzx8+JDq6mpu375NRUUFnZ2dYcngkJeXx8cff4xCoWDnztDSwSySmJjI
      Rx99RH9/f6QHCAPPlQHo9XpkWSY2NpYDBw6ETa7VasVsNmO1WhkbG8NoNK590hrYbDZiY2M5
      duwYQNjKgcbHx7N3716sVitZWVmRhz9EnisDAIiNjeV3v/sdU1NTxMfHc+TIkZAeAkEQePXV
      V3E6nbzyyiv+1OuhYjabaW9v9/+em5sblk2fgYEB3G43FouFrq4ucnJyIvHGIRD0nfM65mlq
      60YXY6SsKBdBEHBaTLR1D6I3JFFamI3sc/L1nQZOHD3IUG8HU3M2cnbsIsmgW9c1LBYLk5OT
      FBY+rrgeExPD/v37sdlsYfGxD9cD/zTZ2dlkZ2eHXW5SUhI3b96kt7eXioqKLR0R9zwQtAF0
      dnRRUlHNcFsDVreIQaeiu7uf0vIquhse4JSzGO7oRBZkJJ+TSauPvVUV3H/wkKS9e5aVKcsy
      H330EXa7HVgYRuzduzfAALq7u0lPTw/bJNDlcnH9+nX6+/vJyclhYmKCM2fOkJqaGrLs0dFR
      6urqAMKWGU4QBM6dO4fBYKCtrW1LZ8Z7HgjaABwiRKkE9EoVTlHEgAqvJKBWKYhWCZinJ/Hp
      EonVeZB8PlRqFQhqQFw1O3RBQYF/uGAymRgYGAj4TFxcHOfPn2dkZMQ/CX5yCLRhd1iVildf
      fZVLly7xxhtv0NXVxeTkZMCyZbDu0A8ePKCmpgadbqHHe1qvYNyBFQoF165dw+12U1Cw4Fb+
      5M51xB36B3KHTo1RM2K2YrI7KdMoMJlmMegEZuYdmJw+ckUPLusMQ4ODpG3Pwm2z4bBOo9Qa
      VnWHrqiowGaz4XQ6MZvNVFdX+z/j8XiIj4/nww8/RK1WY7fbUalUAQYQjIutSqWisLCQy5cv
      o1QqeeONN5a4WG9ErizL3Lt3j7GxMS5fvkxMTAz5+fmUlpYGfG6jug4NDdHU1IRCoWB0dJS0
      tDSUSmXI7V+LH7M79KqfFH1eJFnAYbeijzGgUT3uajOLdjHQ20VmQSlalYBFEikoK6e3q4uC
      neUkGqLYlpZFTk4WxgQjiTEa+kfNlO/cseL1ZFnm448/RqVSMTExQVFREVqtloKCAgAmJycx
      mUxYrVbKy8upq6vjlVdeCXklRJZlfD4fk5OTHD16FJfLFbKbxb59+ygvL8fhWKigs1jLIBT/
      pczMTJKSkrBYLLz99tsMDw9HCgSGyKoGcPvqvzCn2Ub9d7dI2f0y/8d7J/3HBIWS3MLHEU7b
      ti0MGQqKA99yxoSFJcUog5Eyw9rLizqdjlOnTvHdd99RWFjI1NSU/5gsywwNDWG1WomKigo4
      FgqSJDE4OEh+fj6CIDA4OBjSHEMQBARB4Nq1a8TFxeHz+fwerO+8807QD60gCIyMjOByuUhJ
      SaGxsZHt27dHVoFCYNU7FxMbw/nLN/jJqRo6przPXBlBEKiqqkKtVlNTU0N/f39AGGFaWhpO
      p9M/5j169GhYvnyFQkFSUhK1tbXMzs5y5syZkGXCwpJtamoq0dHRuFwu/3g9lLd2Tk4Oly9f
      pru7m6SkpMgEOERWfXoS0vP5v/7yZTKSYjj2A/jNybJMRkYGsiwjiiLR0dG0tbX5XR7UajVF
      RUXP5NrJycns2LEDQRBwuVxhCWI/duwYDQ0NmEwmTp48GbLvkt1uZ2xsDI1G4x+2hWpQLzqr
      GoDgsXHp6jXOvXGMqJg4tHHh2c1cjb/+679Gr9ejUCiw2WxUVVUFHO/v7ycqKoqUlBRqa2vZ
      s2dPyG9BSZJoa2sLaXiyHF1dXQwPD+NwOBgbG+O9994LSV50dDSFhYUBy8IRQmN1A9AZyErS
      86C2lvT8MvbterY3XhAE3n77bQwGA3FxcczNzTExMeE/7nA4uHr1KjqdjuTkZDweD9XV1SFd
      0+12c+fOHQYHB7lx4wYKhYKqqiri4uJCbQ7bt28nNjYWr9dLU1NTyPIApqenuXbtGgaDIeIL
      FAZWNQCtQqSj9SH5JaX0DE0+cwMAAiqpxMfHB7gPREVF8eGHHzI1NYXb7Q6Lj71arWbfvn3k
      5OSQnJzM/Px82AJtFpdyBUEIW1pEl8tFaWkpe/Ysv5kYYWOsagAtDQ/Ye/x1HKZ+BibCs+IS
      KmazmZaWFiwWi7/2VijDFoVCgVarpbm5mTNnzjA+Ps7MzExYdprdbjddXV3AwoQ41Aoxg4OD
      1NfX43Q6GRkZQafThWUZ+EVm1Tt39I1zTHQ3MjRh4/23X/2hdFoVhUJBYWGhfzMtHPG7SqUS
      nU7H+fPnqa2tJS8vHOX8oLW1lbNnz3Lu3Dna2tpClmcwGNi2bRvvv/8+p0+f9k+CIwTPij3A
      3a+u0NY7hqRQoVeJtHX1sf3g7h9St2XJzs5menqaoqIiEhMTQ54Ay7LM+Pg4KSkpxMbGIghC
      2Ipu7Ny5kwsXLgCEJXhHEATMZjOyLCNJErOzs5EVoBBZ0QD2HKphevR/kFD5BmUxJn59a4iT
      W8AAxsfH+f7773G73UxPT5OTkxOyERiNxoAd2kXfnVDw+Xw0NDSgUqmQJCksHqdxcXHk5eXx
      r//6r4iiyLFjxyLDnxBZ0QC0Oj0HDh3hb379K24JIntO/l7A8dmxPlqHzMgSHDxQjUohMDHY
      ycCkFa8ksG93Ae2dfXgc86SW7Ge09S5RhkSS07NITw4+3naxy3e5XGFZA1+sNv/pp5/y85//
      PGwT4Lt371JZWUlWVhYWi4Wvv/6aN954I2Rdd+7cGbbosghrTILN83Z+8cs/Jzt56fp/36iZ
      g/v3MtjaxJzLS1KUhvEpK1V7q+mrr8WtiSMnK52hPicapYToAwQlMdFRyLLs78afTm67Fqmp
      qezfv5/BwUF27tzp3zRbJBiZsixjNBr51a9+xbZt2zh69GjA6tPiDu5G5JrNZuLi4mhvb0eW
      ZSwWy5Lzg9W1sbERi8VCZmbmkvlKMDLX4knv3XDL3WyZq/afGoWP//Hf/zu3796la2As4Jgg
      CDw9/Qp4GQugUCiJionCbvVw5OUT7CwpoLWlZYmcjfybmJjgyy+/ZGpqivv37/t7gcV/y8kc
      HR3l7/7u77h3b6FWwd27d5d8ZnGCuZyMYHR96aWX0Ov1qNVqNBoNJ06cWPKZYNo/MDCAw+Fg
      fn6ezs5Ov5t2KDLX+hfsd7UeuZstc9UeIC4lhzdP6lEolKhUgePs/IxE7t2rRRAUZGll2tq7
      SU+Jo672AZKgJn1+gp7BCWTRSUKsSEtTHV5RxpCQ7L/44krOepEkCY/HQ2lpKRUVFQiCgFKp
      DPiSlpPZ0dHBhx9+yNdff83w8DCzs7NLYggcDgdvvfVWgKwnZS7qu14SEhLWTK2y0fbDQvqW
      W7du+SPC1Gr1mu0PlUWZz0ruZspc0QA8lkn+569+jUoXhcvl5sz7fxJwPC41l8OpjzOolZYs
      bJJte7yPRaXxiaiqjNDz4gwODlJXV4dCoWB6epro6GiOHj267EP7JDt37qS7u5tTp07x8ccf
      LwmlFASB2dlZLl26hEKhCFteoNHRUW7evEl6ejpGo5Hdu0NbRPB4PPh8Po4fP85LL70U9mS1
      zwNzc3N8/vnnREdHo9frqampCcmIVjSAptu/o6Tm93lzXx7O8Vb+n8vfUPa//d5KH/9BSE1N
      RafT+X3sk5OT13z4F88bHR3l+vXrpKSkcPDgQf8xWZYZGRnhgw8+wGw2ExUVhdvtXlOmJElY
      LBZkWeabb76hqKhoScBLXV0dp06d4u7duwwODoZsAIKwsERrs9kAwjZhl2WZO3fuYDabAThy
      5EhYMmM8C2w2Gzt27FjiIxYsK5pObtEuvr92nu/u3OE3H1+lrLQ4LBcMBb1ez5EjR0hKSsLh
      cNDQ0LCujaB79+6hVCo5dOgQ2dnZXLt2zX9MlmWam5v9y5YzMzMMDQ2tKdNqtVJXV8etW7d4
      6aWXaGlpWRKKV1VVxZUrV+jq6grLyo1arcblcjExMcGuXbsoKipa1wtgLSRJwmQycfr0ac6c
      ObNlH35Y2FFva2vj0qVLXL9+PeQ9mxV7gKS8cv7yl6m0dPTy8rk/Iic9OaQLhQOz2cx//a//
      lWPHjvHKK69gMBjW1f3FxsbS3d1NcnIyAwMDS1ydBwcHuXLlCh0dHYyPj1NRUbGmzKioKEZH
      R3G5XLS1teF0OgP2I6xWK3Fxcbz66qv+z4eD2NhY6uvrmZ+fJyEhISzOcIKwsMF26dIlBEHY
      0j2AwWAgPz+f8fFxSkpKQm/781YgAxY2w65evcr09DR/+Zd/GfDgrSRzamqKvr4+UlNTSU5O
      Jjo6et3XW6lAhtVqpaurC41GQ0FBATqdzv9GnpmZwWw2+yvDxMbGLukFgi0QstoyaLD31Gaz
      0dXVRVJSEpmZmQE9y1YqkDE0NMTIyAgHDx7kk08+4ezZs+v6/ldixR7g5uef0Dbw2AEuf/dB
      Xj289pvxWWK327l8+TJRUVHs37+f/Pz8de0Cz8/PMz8/T2JiIh6PhytXroTsm+9yufjNb36D
      SqXinXfe4fbt2xw7dsw/Ljcajf6Y3bGxsbD1AAMDA1gsFmZnZ7Hb7WRlZYUcFSdJElevXmXf
      vn20tLQgy/IzyWkUDgwGA/39/Xg8HkRRDLkHWPHOHXvtLIdFD63NzTg8Isa0zR8CRUVF8d57
      72143Ds4OMiDBw/Iz89HluWAVaDFyKqbN29SU1PDwMAALpdrSUXHp/F6veTm5nLw4EH+9V//
      ldTUVP98ZDHh7qLcRb+ltXi6M56dnaW7u5v9+/f7/2Y0Gvn666/p6ekJa2Isn89HUlKS33Vj
      q2IwGEhOTqavr4/09PSQvQFWNABBoeD2p//Cd312cpK0tIx7KMrZHvSFwsHicmV/fz+lpaXr
      9tnZuXMnycnJpKWlIcuy30V5kbt373L79m0cDgdut5tTp06tKTMmJsY/lDp9+jSXLl0KeBjj
      4+PR6/W89957/nym6+Fv/uZv0Gg0KBQK7HY75eXlAcf1ej2nT5/GZDLh8XjWJXMtFAoFJ0+e
      5MKFCxQWFrJ9++Z+z6vR399PQkKCf24VKqsHxRviqSzPZ6q3CafKHpYLhkp8fDyxsbFcu3aN
      sbExTpw44Y/lXQmFQuEveyoIQkBcsSAIHD16lLi4OH+yrfUkVhIEwT9ZTk5OpqyszP8GFwSB
      5ORk2tvbaW1t9V9zrSgzQRB46623iI6OJiEhAavVumRFarH7b21tRa/XU1ZWFvIQSBRFPv/8
      c/+qktvtDtsSa7iJi4vj2rVrWK1WdDrdksRoG2XVO7d9RwW58emIJVmYPFvjhlitVhobG1Gp
      VLzxxhv09vaSkpISUuJZURTp6upCFEWys7OZm5tb82F1Op385//8n/0pFPv7+6msrAz4TF9f
      H6dPn0ahUPDFF1+suRQqyzLbtm3z10Hu6OhYst6dnp7O5cuX2bt3LxMTE2EZAgmCgCiKfnfw
      rZxpIiEhgZ///OfIshyWbHUrGoB5YpBf/+q/k1x6nHSVmUZzFCW5Z/3HZUmkv6eLqMTtpCQa
      EABZ9NLT1UVCWg7GWA39PT34VFEU5mXhtJgZGJthx44C1MrgLVan01FWVobD4UCr1XLixImg
      ZS2iVCrZvn07drudzs7OgLDM1fR49dVX2bt3L4IgcOvWrSVfxt69e7l48SKyLHP8+PF16fLX
      f/3XaLVakpOTaW1tJedRqOYier2e119/nZmZmXXNK9aDIAjU1NTg8XiW+P+Ewq1btygoKOD8
      +fMUFxdTU1MTssyxsTE+++wz0tLSaGpqIiMjg3fffTfooiYrPokKhYqUtAyi1KCKz+Z///03
      A44PtjehScpktLcNl3dh0tTV0kRcei49rU14fF62ZeSSrJijdchMc3sfuRlGGh92BqXoImNj
      YwwNDTE8PEx9fT2SJIX8hQmCQF5eHna7nRMnTrBt27Z1nbNv3z7/tY8ePbpk2DA/P+9/o66n
      +LYgCPyH//Af/BPw/fv3Bzz8sNCrjI6OUltb6++1wsGdO3dob2/nq6++4pNPPlnXZuBauFwu
      bty4wVtvvRWWTN6wMJzNy8vjtddeo7CwkNLS0pAqcK7YAyRs287Lh/fxv67eZVrlRYpOpqb6
      8dh5yiGy1xiDGB2FxeNFr9Zi80B+XBTWKDUOIQrbRDsdPVPsP5hDnzWWqNgkZG//qslx10Kr
      1TI9Pc3o6CjZ2dlhSQ4riiJffvkl0dHRzM7OMjc3F+DWEGxy3Pb2dn7yk5/4E9oupnhcS9ej
      R48yNzeH3W5ndnY24O2WmJjI1atXqaioYGpqyr+KtZbM1RBFMWBIOTMzQ3Nzsz+IJ9jkuEVF
      RVitVvr7+9HpdMzMzATERQej67Zt25icnOSLL75gz549xMTEYDQa/XLCmhy3o6WJA6+/y544
      M//ftZYAA4hRgd0r4xR9JDzyFNUoweuTsPsgXSWTkFdMcmI0bX2TSLIPZC+CoFo1Oe5apKWl
      ce7cOSwWC0lJSUs2Z4KRuRgT3NDQwOzsLG+99VZIyXEXqa6u5urVqwAcOnRoyflPy5Rlmf7+
      fiwWC7BQH2Fxkg4L+yBzc3MkJSUxPDxMdHR0WJLjqlQqioqKuHz5sv96i4mHF48Hkxy3paWF
      qqoqZFnm7t27XL9+nZ/+9Kd+Q9qorovJAEZHRxGEhRSWTzvDhTU57tHX3+affhlS6qEAACAA
      SURBVP1bmkQlv/+zDwOO7SgppqmpDp0hkVi1RFt7N4WFebQ2NRJtTEWcn6JxYBxZlthRWs7c
      WA8P6pooKA4t28Ji/p6kpCRiYmI4fvx4WFwBTp065Q8xDEdOoJ6eHpKTk/npT3/qzw6RkZGx
      5nl3794lKysLnU63JJluVFQUWVlZZGRkoFQq8Xq9IQ//ZFlmYGCAmZkZ/4OjUCjCshGWkJDA
      0NAQBoOB+Ph4RFEMad1er9eTmpqKJEnk5eWFZ2daXoGHtz+XGwdmVzocFmZnNy5/eHhY/uyz
      z+SxsTF5ampKliQpZJk+n0/+h3/4B/nbb7+Vb926JVssloDjVqtV9ng8G5L5xRdfyFarVZZl
      WfZ4PPKnn3665DPL6Wqz2WSbzSbLsiw7nU55dHTUf0ySJLmpqUnu6OiQPR6P/G//9m+y1+td
      U+ZaSJIkm0ymJffySZ022v5Fuf39/XJ7e7ssSZLsdDpD1lUURbmpqUn+9NNP5d/+9reyKIoh
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Friday Rush Hours ' width='192'>
      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
      nyDswf8Di3xeoY6qwSIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Late Night Hours' width='192'>
      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
      lM3g/wc0BOinVzrd9wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Monday-Thursday Rush Hours' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2de3AU153vP93zlDSSZkYSer8FCAQIMG+DbcCOHdvBxI+41pvsxpv43pvc
      TTa37tatrdr731b+SqqyW3t3/8i9W+vaym5iFscxxnYSxwbHvEGgNwMIoQfo/ZgZzXum+9w/
      JI0RoAHBjGak6U8VxfR0q893Tve3T5/X70hCCIGGRpoiJ1uAhkYySaoB/H5/MpPX0EiuAYLB
      YDKT19DQXoE00hvNABppjWYAjbRGM4BGWqMZQOOhCQQCyZbwyGgGSAiCKec4N3pvElGXbz+j
      ZgCNe6IqAYbHPORmKLS0dydbjkYMNAMkAFmXQU1VMQP9QxQU5SdbjkYMNAMkAKEqNJ07R2Ht
      OipW5CZbjkYMNAMkADXkwu1XGejtYmBkMtlyNGIgJXM0qNPpxGq1Jiv5exIKhTAajcmWMYdI
      JIIsy8hyaj2vlsP1S60cXSBCVfD7p8cTqUqEiYlJIor6SOf0+XyPqmrOOcJBP6HIo2kKBAIo
      ivJI54iEgoQiCgiBx+1kbGwMfzD8SOd8VIRQ8fmnW5KEGmFyYoKI8mjP44VevyVrAKEqdF1p
      51LrZRCCjpYmJp0TXGq7TDIbHkdu9fHZyXMABKYmaT//Bd1jyW0uDPlcXLxwlt7BSQSC1ra2
      aVMltYlW4brDQVNrBwCdLZeYcDppam5bVBVL1gCSrGPlmgayMwwA+BUdtTW16MI+knldV5RW
      Ul6UB4A528baVdVIyZMDgDEzl4bVdegkABURCTMyMpLkPgoddWvWkpNpBBT8EYmamhpksbgj
      hJesAe5EAgQCMfNZYz507HpiLxvX13HVkSp9FNLsBWSxi2/94iYXP1QlzJXOdgYGRrHY8ym0
      ZdJ0oQlLXjFyEh1wq7eLwYEBdLKRsmIb16/1MSncFGY3YM0yJ0WTzzVG59XreMI6cjNW0dvb
      D0qI4qr6pOgBQAlx2XGFwYEBsq35FNksXLx4gUxb4aLKiLYCBQIBwuHFrRR5PB4sFsuipnk/
      UlGT3+/HYDCg16fW8yoV82qhmqI5ajQaFz2DQ6EQGRkZi5rm/UhFTUKIpFyf+5GKebVQTdEc
      TUY7s06nS7mLmoqaZFlOSV3LQdOyqQRraDwMmgE00hrNABppjWYAjbRGM4BGWqMZQCOt0Qyg
      kdZoBtBIazQDaKQ1mgE00pq4GEAIhZamc5w734QvGAFAjQRobrrA2XMXCamCgd4uLjU3Mzjm
      ikeS86IoCkNDQwghuH79Ol6vN6HpaSxt4jKQIzDWjWSvY4PVz5X+YRrrShkf6CWndCUl+jE6
      rw/iHx+ntKQUuzU7HknOiyzLtLW18cUXX5CdnU1VVVVC09NY2sTFAEG/H3NWJiaTSig4BUAo
      HMZkMWIyZxG4MYk/GCIrQ0/TxRZ2bGlEVVUURSESicRDAgAul4sTJ06gKAqXL1+msbERn8+3
      oNGB8dYUD2Y1SVJqTfVJ5bx6UOJigJwV5XS2XsOQo1JYUM3AwAC2vDwu9/XjFZNUrtpA32UX
      OoMBnSxFR57GezSh3W7nhRdeoKmpiYMHD9LR0YEkSQtKI5VHOKaqrlQiKaNBZbOVdXWFGK2l
      lK/IISMjg0xrMTXF2WSXrKQ4N4PNmzYwMeFm06YN8Ujynsw+Ia9fv46qqvT392ur0GjEJE72
      lcixryBnZstms03/X1AcPcJgyqSmpjo+ycVAr9ezbds2PvzwQ6qrq7Hb7QlPU2PpsuyaQYUQ
      3Lx5E5fLRWtrq7YQn0ZMUusFLg6Ew2GmpqawWq3k5eURCATIzMxMtiyNFGXZlQAGg4HKykos
      Fgvd3d2YTKZkS9JIYZZdCfD5558zMjLCtm3b2LdvX7LlaKQ4y6oEiEQiTE1N8corr9Da2pps
      ORpLgGVVAggh6O3t5ejRo9E+gKeffjrlQndopA5aePQ7SEVNHo8Hk8mEwWBItpQ5pGJeLVTT
      snoF0tBYKMvqFUhRFPr6+nA4HITDYe0VSOO+LCsD6HQ6ysvLAaiunh6TpKqPtjiFxvJmWb0C
      qarK6dOnOXz4MMeOHePjjz8mFAolW5ZGCrOsSgBJkli3bh2ZmZnU1dWxfft27fVHIybLygBu
      t5sTJ04ghODWrVvIssz+/fs1E2jMy7IyQG5uLi+88ALt7e0oioIkSeh0umTL0khhllUdYJas
      rCyysrJoa2vTRoNqxGRZlQCzOJ1OIpEIiqJoleAlhtvtprW1lcHBQSYnJ/nOd76T0FJ8WZUA
      QgjGx8cxGo1kZGSwe/dubULMEkNVVfr6+jCbzRQXF5PogQrLqgRQFIWf/OQn2O121q5di06n
      o7S0VKsELxEmJiZwOBxkZWWRk5NDOBxO+KpFcYoLJHC0XeLCpdboquhCDdPRcokLl9pRheBq
      ZwstLS0MjE7GI8l7otfr+fGPf8zLL7+MJEkpF0VBIzZZWVnk5eVhNBpZu3Yt4+PjCe/IjIsB
      QpM9BDJKWVtu5WrfMAATAz2Y8itZU2ygs38SpztATW0dRfmJGzwlhCAQCDAyMpKyC8tpzI/J
      ZKK8vJyRkRHcbjc+ny/hD7G43B3+KTeZOcVkZOrwDU1HfvMHAmTkZZBpzsV/bYrysmKGbvUx
      FdaxcW1dQuICRSIRfvKTn1BaWkpBQQEej4dAILCgTEzlWDepVqIlIq+MRiMHDx7k+vXrvPLK
      KwghFpTGQjXFZTh0xDvChWsuqq0RPMZCbGYwql66xwV2xojYVmIWfvJyM2hqv86OLRuB5TGc
      djFIp+HQU1NT/Od//if5+fno9XqeffbZBbUCLVRTXEoAXWYBNSv8uIJmaottDA8NYSsqo8B3
      Ax9F1BRYGBtycqV7kk2N6+ORZExmO8HC4TBGozHlnpwa8yOEoLy8nCeffBIg4ZXguBhAkiRW
      lFSyYma7uHg6HlBxRU30mILicm4LE5QwFEXhd7/7HZFIhJGREV577TVyc3MTn7BGXDAajXi9
      Xo4ePUp2djb79u3T+gHuxcTEBF1dXfdsJx4ZGSEUClFXV4eiKElQp/GwyLKM3+/HbDYzOTm5
      NJpBF5Pjx4/j8Xg4fPgww8PDnDx58q5jtm7dyoEDB9i+fXs0Sp3G0sDtdlNaWsrzzz9PRkZG
      whskYhpAiYQJhyO4nJOEIqnxJFVVlcHBQYqLiykpKSEQCMzZL0kSJ06cwOl0oqpqwnsSNeKL
      3W4nFArx7rvvYrPZEt6MHfPsJz/8D5zGFVw88QWFG/byvdefSaiYB+HJJ5/k1KlTDA0NYTKZ
      2Lt3713HrF69mvPnz5ORkcGuXbswm81JUKrxMEQiEfx+PwaDAbfbjaqqCa0DxDSAJdvCrz/4
      lBee349jJJwwEQtBp9OxZ88e9uzZQyQS4eTJk9EWA5guAcbHx7l58yZ6vZ7t27cnUa3GQvF4
      PFitVvbs2bMo6cU0gK2klh/9r72U5Vt4IkWqCx9//DFdXV1kZGSgqupdcT/D4TAmk4nKykqK
      iorweDxkZWUlSa3GQjEYDJw4cYIrV65gNBp54403EvoaFPPMUsjDkQ9/x8tffYJMSy6mXEvC
      hDwoO3fuZPXq1dTU1BCJRDh79uyc/UajkcbGRiYmJrhx4waPPfZYkpRqPAyqqtLY2MjOnTsX
      ZUJTbAOYc6jIz+DC+fOU1Dawbf3KhIp5EKxWa7SnT5ZlCgsLo/uEEBw/fhyXy4XZbMbj8SRL
      psZDYjabMZvNtLW1odPpokZIFDENYJIVHB1t1K5ZS1ffcEoYoKmpifb2diRJQlVVDAYDdXV1
      wHQnmMfjYd26dXR1dVFbW8vY2Fi0Y04jtRkaGuLcuXPRbb1en9z5AO2XLrD1qefwjd2gZ2gk
      oUIelOzsbDZu3Eh9fT2KonD8+PHoPiEE165dw+Px0N/fT0ZGBhUVFckTq7EgioqKOHDgQHRU
      b0tLS8LTjDkYLugZ5/DhX+MM6jj46jcozYtvHeBhBlMJIaJNY0IIPB4P2dnxW3pVGwz34MQ7
      r1RV5dy5c/T39+NwOPj2t78dDXSWKE3zNu2c/uwov/jlu/gUHRl6hc6r3QsSkihurxhJkhTX
      m18juaiqysWLF7HZbFRUVFBaWprwNOc1wOZd+ykwh6jf/gwH92/hcldfwsXEg0gkws9//nOO
      HDnCBx98oEWFWELo9Xq+973vsW3bNqqqqjhy5EjCx3LNWwcwmTPYsWs3//yLt/lCUtj8zGsJ
      FRIvJEnCbrdHe4i1JZKWFpIkkZOTw5NPPrkow1hiVoLHXV7e/P7/oLIg+e3/D4okSdhsNs6f
      P48sy+zYsUMbCrGEEELQ3t7OwMAAtbW10Ra+RBGze9coR/iXn/+ck6dPc7VnIKFC4oGqqgwM
      DGAymbRJ8UuUiYkJent7CQQCXL16NeFxnWKWALmFVbz4TAayrEOvT/0Qg5IkUVhYSE5OTnQY
      baq1nKQ7s8tYjY2NUVNTg81mm/OgslgsjI2N0dXVxerVqxN+/eY1QMg9zL++/Qv05kwCgSAH
      3vhOQoXEg9kWovfeey9aErz11ltaS1EK8fHHH5OVlUVlZSWfffYZDQ0NrFmzJrpfURS++tWv
      UlhYSG9vL0KI5PQEt5z8PWv2/wkvbqvBP9jBP3xwnIb/Ml9FWOBxTeKLyBTkWZmV654cI4SR
      fFsOAFPOcQxZNsyGxA2sUxQFu91OVlYW+fn5+Hw+zQApRCgUYvXq1RQUFFBUVITP54vuU1WV
      EydOMDg4yNq1a7l06RJ/8Rd/kdBZYfMaoHr1et7/919jjeziatMJGjZ9dd6TqEEXzZd7WZGl
      ElRXUl6Qg985hKNnHIvqJrJqCwWmEOe/+AOVO16itiBxlVK9Xs+ePXuYmpqit7eXgoKChKWl
      sXCef/55zp49i8PhoLCwkM2bN0f3SZJEdXU1NpuN0tJS6uvrEz4hJkZPsMA9Pky74zrFVSup
      KimYtyhy9bUxbKqjzuKlqWeKrQ3V3LreDrZaSsxOLnQr5IgxTAYFNa+BqjwjqqricrniPmFd
      URTefvtt3nzzzYd6ciRC06Pi9XoxGo0pV595mLw6ffo0AwMDKIpCe3s7b7311pzeXr/fz6FD
      hxgeHkan0/GjH/1oQSNCF6ophr0kcvKK2PV40X1PYjSbCfkDhE0hjMbpi2Q0GPCGw4SEHwmF
      7psjZOt8hDzZ1BSsQpZldDpd3B0uSRJms5lf/vKX2O32BS+SlwhNj8qsplTVtRCsVisTExPs
      2rULm81GdXX1nP2BQIC6urrodEhZlheUxkI1zXvk5x+/S2fPlwPgajfs5CuPb7znseb8asJN
      TbQM62ho3EhnRyf1q6rpb25nSJXYvOUxjOtW4hq4hjez8oHFPQydnZ289tprvPPOO/j9/pS7
      adKd9evXU11dzSeffHLPEi0vL4/GxkZu3ryJy+VK3iuQUFUUJURHayu+kIK9uILVVfEdmxHv
      wVSRSITf/va3PPHEEzgcDkKhELW1tQsaDq0NhntwHiWvhBCEQiGuXbvGunXrgHsPh05aZDhJ
      ljn5/n9wottLVb6J9sFQ3A0Qb3Q6HW63m2AwSH19PR988AEbN9671NJIDh9++CGDg4PA9AOr
      pKQkaoCioiK+9rWv4XK5GBgYoKKiIrkzwiw5VjY11jJyvQW/3ptQIfFAkiQOHDjAyZMnURSF
      vXv3YrEsnWEc6UBVVRWbN2+muLiYYDB4V1wnr9fLhx9+yKZNm3j33Xf55je/mbyoEKWrNlJt
      LUFZU8FYyJgwEfHEYrHw7LPPJluGxjysXbs2+tloNLJ79+45+xVFwWw2U1tbS1NTU/JmhI0P
      9fKLt39OwdqnKNGP0zyeyZrqrydUzKOiKAp9fX04HA7C4TCSJC24FUgjsdzelC5JEkbj3Adr
      Tk4OmzZt4pNPPmHfvn3JC4wly3oKi8swG0CfW8l//Urqx9fR6XRUVlZit9tTri1f48GYmJig
      v7+fF198kaNHj7JixYqEVv7n7SmyrShl7+Pb6L56hcuXznC+IzVmhN0PIQSHDh3SVodcomRm
      ZtLT08OpU6eYnJxMeCU4Zlepo72FHc+9yrde+QpNze0JFRJP7HY7hw8f1maELUHMZjMNDQ20
      traydevW5EaH3vPcQa5+8R7/+v5J/uTg0qhYqqpKbW0tb7zxBvX19QSDwWRLik7kv/Ozxt04
      nU5GRkb47ne/S2tra8KjQ89bB2g/9VuU0h289b2/TKiAeKKqKp9++ilnz56lr6+PiYkJXnst
      NaZyHjt2jLKyMq5cucLmzZspKytLtqSUxGQyMTk5SWdnJ8FgMHkrxDhHb3L003/hVP507M1Y
      QyFSBVmWeeaZZ2hsbEy5YFgVFRUcOXKEurq6lNOWSmRmZnLgwAEGBwd59dVXk7lEksSTX32Z
      3avzpw80Lp3J5WfOnCEUCnHlyhX+6q/+KuktQkIIhBD86Ec/YnR0lKGhoUUJ+bEUcbvd/OpX
      v6KoqIiurq4FD4VYKPMaYNPeryOMOVjMS2swmSzL7N27FyEENpsNv9+fdAP09vYyOjqKw+EA
      0EK2z0M4HMbtdlNUVMSePXuQJCl5JUBzu4N8i4HcyvUU5S6dqApCCDo7O4lEIlit1pSYEGOx
      WCgvL4+Oe8/JyUmyotTE7XbT1tZGZmYmbW1tBAIBnn766eRMiRy8fI5/O9tMQUUDBdlGVm7a
      zfNPpHaocVVVee+993C5phfrvnHjBrW1teTl5SU0XSEEp06d4sqVKxQXF7N///45PZy/+tWv
      GBkZYfv27RiNRjIzM7Xe6Xsw+2B4+umnAfjoo49QFCWhpUCM4dAK3Zcvcvx0M0KfydcOfp1C
      a+a9Dn1oEjH0OBAIcPz4caqqqlBVlTVr1izoCfIwms6fP4/RaCQcDqPX6+nt7eWll16K7ldV
      lYmJCdrb23G5XKxbt47a2toHPv9yHA59LxRF4d1336WsrAwhBH19fbz++usLMkAch0PruHm1
      jcKG3WzOHecXv/mE//ntl+Y7PCVQFIUf//jH1NfXEwqFonNME/20ramp4YMPPkBRFF5//fW7
      BnA5HA6uXr1KRkYGO3fuZMWKFfOcKb3R6XS89tpr9PVNh+HctWtXwmM7xazhllVW885nf2DA
      GKCu8SsJFRIPdDodf/d3f7fo6ebl5fHtb387un1nJLr+/n4kSSIYDHLmzBm2b98+Z2EPjS+R
      JInKyulZg7OtZ0lbIKNm01P8oHYjIVXGZk18xU1RVX7T2ZbwdG7n6w0bkB8xg7u7u/nDH/4Q
      ba5zu91zYt1ow7MfHK/Xy8mTJ9mxYwe//vWv+da3vpW8+QAAsk5HhkFPOKxgMs53uCAcChJR
      JcxmUzQuUCgYQEEmw2ggFAoSCitkZmXOe8MJITh3c3GjUB9cux4e0QDFxcXU1tayb98+YHrW
      0510dXXR0tJCTk4O+/fvT3jz3lIkEomgqiqlpaX8wz/8A9///veT2REGV8//gfc+a6K6torR
      cA5/+cbz9zxODXs5c7aNLBOUrNxAkS2L4NQYFzt60Kt+ahq34RzoRVVV3CGJx9bXJ+THJIuM
      jAz27t0bLaq3bNkyZ7+qqly6dIlXXnmFrq4umpqa2Lp1azKkpjROp5O2tjaEEGzbto2Ojg52
      796dvFeg8dEhSmvqmZrsR2TN35nkGe6hYGUjKy1eLvWNUmTLYnx0mPKVaykxTXKxd5zVxXa6
      e/vIzi2OruCuKMqcwU5KEgaJKYqCuC3dOzU9CF6vl1u3bkW3L1y4wBtvvAFM3/yfffYZfX19
      fPTRR3i9Xurr6xeUhqqqKIqScsF+HyavYhEMBpmcnIxuh0IhIpHIgkqBhWqKaYAdz34D/ZmT
      TOY1snv3rnmP0+n0qIqCqqrIummxOlkmoqqoioKsM5GZbaW8NELXzXGkquJoL9/t73ciCRdY
      lmV0t2XwnZoeBKfTybFjx2hsbASmezRnz6HT6di3bx979uyJjgI1m80LSkOW5YfSlWjiramk
      pISDBw/O+W6hpl+oppgGuHzuGMfOXsFMgHNnTrJh535e2rftruMyC2uYOn2OC7KOtY2P0dnR
      yaq6Ci5cbKNfEWzcspnOtjZUSSIz0xr9UXeGME/G8+0uDQ8RVr2yspKXX345OsitsLBwzjkM
      BgNnz55lfHyc7u5unnvuuTlzYx9GZyoQb02RSISenh4cDkd0BdCvfOUrC7qhF6oppgEGbvax
      87lX2WKb5J8/ukzLmc/uaQBJNrL98S8nN+c2TF/cHTt3Rr9bv2nzXX+3nLh9hOfKlXcvJ1tX
      V0d5eTmlpaU4nc7FlLakaG5ujr7yLIbhYxpg576v8vYv3uFcRLD/a19n8IYt4YKWK06nk1Ao
      RGZmJqtXr062nJTF7XYjyzJr1qxh5cqVyZ0RFgoGpiumQqFvYJznn3s6oWKWK++//z4Oh4Ou
      ri7Wrl2rhWucB71ez5tvvsk3v/lNwuEw//iP/5i8RfIAzv7xU4pXbWBNSTanrrsSKmQ5I8sy
      Bw4c4OjRownv2VzKqKrKsWPHmJqaIj8/n7/5m79J+MMiZgnQ+NgO6ipLOXPyFOUl2viVh8Vi
      sXDkyBFcLhdHjx5leHg42ZJSElVVGRoaQpZlJiYm+PTTT5NbAgyNjpK3+nG+8+a3+PD8jYQK
      SWWEEDxKfLKnZpZsvR01RsQzicWpAMabR43iptPpov0nD3reR82neQ1wvfU0/+9f/43sknPk
      6gLU7fraIyW0lPlvh35Jv3Py/gfGiZ99/VVWr1h6g+XU4DDey/970dKTDFay1/30kc4xrwFq
      N+zkf/xQYjhgxm4xkmPXXoGWGwMDA0xNTVFaWkpTUxN79uxJuzFKMX9t39U2Ort6GR4exjnl
      i3WoxhKkuLiYlpYWfvrTn7Jhw4a0u/nhPgbIs9uYnJjA7/cTTnCAIo3FZ2BggOrqan74wx9y
      /vz5tAzYFbMSXLvpKZ7J6UbWG8nN0eLsLyfGx8cJBAIMDg4yODiI3W5fkhXvRyWmAfoun+fT
      05epqipjsP0WP/zmC4ulSyPBWCyW6PxkuHsWW7oQ8xVoyjWBvbCMsaFbyDqt93I5MTAwwM9+
      9jOOHz9OT09PdNmidCPmXb1l39cxNF/EHSxny9bUDomicTe9vb18/vnnTE1N8fjjj9PY2Bh9
      zamqquLv//7vaWtr48aNGwnvcEpVYpYAfzz6S0LWlexcZeX/vvPRYmnSiAOqqnLixAn+9E//
      lMrKSiYnJxkYGIjuF0Jw48YNbt26hclkoqKiIolqk0dMA1TXreST9/6df/mP91ld9+BxbDSS
      z+zyQ7///e9RVZXi4uI5zZx9fX288847BAIBIpEIo6OjSVSbPGK/2Jut/Pmf/xlWSwY5lvgG
      xdJILJIk8dJLL9Hc3IxOp6OiomJOfKSqqir+9m//NokKU4OYJYAUdPP+0U9wu5xMujyLpUkj
      DgghOHz4MDAdcvDQoUOMj49H98/OM779X6JXZExFYpYAsjmHioIMmi6cp6S2gW3W7MXSpfGI
      zN7M5eXlWCwWrFbrnHXTrl+/zpUrV6LbdrudnbfN4EsXYhrAICk4OtqoXbOGrr5htq2/e6qf
      RmoiyzIvvvgiZ8+eJRwO37VoSFVVFZWVldHe33QcBgH3MUBH8wW2PvUcvrEb9AyNzHucECqd
      rZfwRXSs37Aes0GHUEK0t7XjV3Rs3rSOnmsOPL4g1hXlVJUmP2T5ckcIwaeffsrw8DCvvPIK
      Ho+H7u7uaFBen8+Hy+Xi8uXLAFitVrZtu3u+93InpgF2PXOAw+/+Bk/EwBuvfmPe44LjN4hY
      Klln9XOtb5j1tSWMD/SQuaKaOt0Yl/tcrKpehV5SOd/crhlgEVBVFZ1Ox1tvvcXbb7/Ntm3b
      5kSXnl00ZHx8HJ/Px9TU1LI1wGjfF3hdPffcN/8aYbcc/J+338cgC77x3f9Oad78Y4ECXi8Z
      2aWYMyQCQ9NTJwOhIGa7GbM5m8CIl7A3QtPlbho2bkZV1Wgl7PYgRhF18TtjIpEI4rbi/96B
      lRa3cnhXwLCZ7YWO1bHb7fj9fl588UUOHTrE888/P+e8zc3NbNy4kaGhIaampgiHw48UhEpd
      7M40Ie66Vve6fv1XjzDc/bt7nmJeA3Q0nWLH1/6MKn8TZ1q7qd7fOK+O7BUlXL7cgyVXIT+v
      lNHRUWxWO9eGhomIMYpK6mlzdLB1+zYMM4GzZgMYzZnzqSz+YCy9Xj8nMNZdmoDFjlh0p4bZ
      7YXOj929ezpUjcVi4Qc/+MFd+zds2EAoFOLq1atkZ2djMBgWZLI7dSqRRQ7cJUl35cm9rl+s
      4Mfz5mh+aQ0ffnaYThEioF7jdyaVZ3dvuuexsjmPVaUBnEGZmsJcRkdHybSXUBLow0cFZVYz
      vtwMOtvbyLEXUl1etJCfqZEghoaGMBgMd0VjSyfmNcDqx55i9WNPPdBJJEkir7CM2YWIZheA
      WFFa+eX51m54aJEaiSEvL49/+qd/Ys+ePdjtdjZt2pR2Q6K1IZ5pytDQEDqdjr/+678GSLm4
      o4uFZoA0ZXh4mObm5uhKNVarNS2Xb9UMkKZIkkR9fX106dbbV7VMJzQDpCllZWUYDAays9N7
      eItmgCWKa7STm1d+vWjpWWwrqWx4fdHSWyw0AyxRfO4++joPLVp6BRV7lqUB0nMElIbGDJoB
      NNIazQAaaY1mAI20RjOARlqjGUAjrdEMoJHWaAbQSGs0A2ikNZoBNNIazQAaaY1mAI20Ji4G
      EEJw3dFGc1snYWU60JJQI1ztbKO5/QoqAvfECO2O6/FITkMjbsTFAGFXPy7yqFmRwbX+6SjD
      zqFehKWI6lyFK7fchFWZUFCLL6qRWsRlOLTPNUm2fTXZFi+e0em4QF6fD0teCTlmhavXXKzZ
      UMHNmVVItLhAsXmQuECLvaCFUO8fgydV4wLFWpQ8Lgaw5BVy7cYg48EwNmseU1NT5OTk0Dc+
      gV4aI694bkxRWZa1uEAxeJC4QIs9iV2S7x+DZynGBYrLK5Auq5DSHIXRgIGaEmTi898AAAiH
      SURBVDuTk5NkF5STI3uZxEZ1nolrjnZCgQBXb/THI0kNjbgQlxJAkiRKKusomdmeXW6nomZV
      9JiV9evikZSGRlzRmkE10hrNABppjWYAjbRGM4BGWqMZQCOt0QygkdZoBtBIazQDaKQ1mgE0
      0hrNABppjWYAjbRGM4BGWqMZQCOt0QygkdbEyQCCUNCP1xeYM3cqGPDh8wcBUCIhpjxeRIzZ
      ORoai01c5gOoIQ9nz3dgMUFR7XqK7VkEp8a42NmLQfVRtWEbN9qayM61oOhtNKwsj0eyGhqP
      TFxKAM9wLwV1G2hcW8utoelJ8eOjw5TXrWHz+hquX+lBl2Wjfs16vM6heCSpoREX4jMlUq9H
      iSgoioJON31KnaybnvweiaAzGAAxM7c8vVYi10ht4mKAzMIavH2tNHX0UFNeTGdHJ/nFZQx2
      tXO2Y4CGNVWYFB8XLpylsLwuHklqaMSF+MwJlo1s2/V4dDu3YS0A23fuiH7XsHFLPJLS0Igr
      UQP4/X6CweCiJu71eudsq0JQZDAtqga3yzUn3s6dmgAqMrPIUBev9Sri9+N0OqPbgUCAYDA4
      JxRKIGzEmLNh0TRhKJ+jCe7OKxEO4BcViyZJUrJQ7qMJQOiL580rScy0SyajedLpdGK1Whc9
      3Vikoiav14vRaMRgMCRbyhxSMa8WqilaAkgxggclCkmSkpJuLFJRE6SmruWgSesJjidqBI9/
      cV8jF4rXu1jxWVW8Hh9erzdGaMIIXk9gQWf13OMV51FIugG++N0H3Bz3MNnXwY1R/8yrmEBV
      BddbLjDmVxBCIIRAVVXGx8YQTL+yOdoucam5mZbOa3OOmY07KoRgbGws+v3sdwDt505zsaWF
      E5//Ee+doUDvQ8elM1y81MyJk6cJRNRo2iI4RVf/8Ew608d2tl6gqdUBwNX2U3xxphP35BjB
      iECd/btHfP0cHejlj78/wmenmhh3+6K/V9z2m10TY4QU6O6ejtDtn7jFex99hioEnvFbHPrN
      b1GVAGMTU6iqCmL6GtwPR9MfudDZCwjazx7jTEc3E2NjKCh0X++jt/cGEWVGDyDUEGdOfEFz
      czOTHifXuwaiGoUQd31WhZj5HdP5fL27G2b2Kaq6wJxS6XK0895v3qO14zLBiBqfVqBHIXdF
      GWM3uzHngipU2ls7WN+4mqYLbYTG+xkhC0ORmZNtfdTU1BH0TpCXn08k5MKnZLKuvhxfSMU7
      0c8XF7pYuWYtJsXN+IQTS2E1/skBsjNkTpxuITdTR/GarZTaMpD0JsoryunzeVjo/ScbM1hf
      v4E+RxO3ursw5pWgn7hGxFLK8M0eFNdNbCX11JTaUWQT+kgAVUTwKTJmGSaHBsg2mulydGPR
      h6lYswmL8eFfJQpKKlF8E4TyGsiTxzny+zPU1tRhM4YZm3RizCnGFBijICf/yz8SKvnZJkY9
      IVyDYxStsCPkIIP9kwz0OMi15aKa8qkuscdMW2eyogadqEoxQVWHQRL0Dw5iz8+NHuNzjnBj
      eIqNDSsZ7eqgqGEHVTYDMMX5mz1EwiPYylbhunUFWW9CzswjS3XjDKqsWFHIzZ5ujAYZW2n9
      tPRIEMfVa0w53azbumsBeSdTV7+OiSkfGxrWcKWzJfklgCTrKcvL4uaI6659RUWlrF6zhgyD
      jtKaeuprSqP7BAJJkggFA5w5dw6EoGrVeuoqVuB2uZFQGZ/88pxlVXVsWF3BlC8EgKqEcbvc
      GMwmwuGFFQFhv4e21lbUzELsmXMDwhaVV7Np02O4xm9FvyvNy+JaVy/ZeUXR73RGC3ZTALfI
      xmKM72UorlxFQ10pLvcUQtLjnBy553FFlZUM99wgiIFM/exNJLGqpoymzn4qi20PlF5+poG+
      WzfJKSi7e2c4wJkL7axeVYvEdGRwWf7yhi0ur6ahvo5QYAJ0NjZs3ERoagxnIMLGxkasZhVb
      US2btmxlYuAGAEG/F38wTCQ0hdu/wOL7doRIvgEA8kqrmBzqQxUSYb+bzo7LeIIRsq0WrnZ0
      4g8rGI1zm0f1xlyk0Djd/QPoDUaQZIwzPc7uKS8GvR5iVIaEouD1+fBMeRBEcDi68I7fpG/0
      /u/IhgwL6xsbWVldjinDRF/XVbp6p2/48aGbtDRfIr+oMnq8tbCM7iuXKSrMi34XCbiZErnk
      4sbpDy8wx2JjNJpAqLinfBj0hnn73iVdBornJhnWL42JEFzrGWTn+iqu9d3bOHdSXFVJ80UH
      ZUW5d+80mHli9xZaL7WgCFhRW09f61k62tuYmLq9vmSGyCRtrS0YLXlYM/S0trXhDumYHOqm
      5eIFbMVVAAS9HiJCRq/TASEcjuu4R/q4Nb7A+oHO8GUzaDJwOp3k5OQgy/J0bHlZBlVFFQJZ
      lpEkiUgkMt3+LUnIkjTzBJn2rRAqkYiCLOuQZQnBdChsRYkgkKJhsSVJQgiQJBH9Xp15h5Rk
      Gb1ORlEEsgSTThd2e+wnn6qqSJI87a+ZGPXSTMj36bj9Enq97rZjZ3TrZIQqpm9ICYSQkBAI
      SYoZwtvj8WAymWI2gwpVBUmafsoKkOXp3zj7eTofZISYzj8hxPTIFKHOfC9m8mn6dpAlKXod
      7nf9JElGVZXoeWEm/Zk6hCRJCFVFknVIEqiqgqKo6PX629IFCUFEUaLhzaevvR6EiiIEep0O
      IQTyzH0xm+eqOn3tBBJut+u+zaCz95CqpkAdYDaD5dlOHp1uTrF050W//YJIkozBcNs2s6e4
      +2dJM3fd7DGyTvdlmoBOJ82c//7vk3NuCklCf5vGu2LTzxw724kl3Xb+OzU9CtJtmmaTkO/I
      y+k05Zn/Z9KVdNHt2/+fPs+D50X0993+97f/1tvyevqBdWe6ABKG237Hl9f+y98xe/zteT57
      7R64JjB7z8lyarwCaWgkC80AGmnN/wf9HzwqKaob0gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maryam - Top Products per Group - Weekend Busiest Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Treemap of Aisles and Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maryam - Your Order Hasn&apos;t Delivered Yet?' width='192'>
      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
      rZfNcP8/4MHDEJzS5U0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
